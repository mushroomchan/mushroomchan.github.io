<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ClashXforMac安装使用一条龙</title>
    <link href="/2022/03/11/ClashXforMac%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%80%E6%9D%A1%E9%BE%99/"/>
    <url>/2022/03/11/ClashXforMac%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%80%E6%9D%A1%E9%BE%99/</url>
    
    <content type="html"><![CDATA[<p>ClashX 是一个梯子工具，长得比Trojan好看</p><p>记录下安装使用方式</p><h5 id="Step1-下载DMG文件"><a href="#Step1-下载DMG文件" class="headerlink" title="Step1: 下载DMG文件"></a>Step1: 下载DMG文件</h5><p>戳 <a href="https://github.com/yichengchen/clashX/releases">Github链接</a> 下载</p><blockquote><p>这条官方readme里说有macos但实际没找到release，疑惑</p><p><a href="https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a></p></blockquote><h5 id="Step2-安装ClashX"><a href="#Step2-安装ClashX" class="headerlink" title="Step2: 安装ClashX"></a>Step2: 安装ClashX</h5><p>和常规的 mac dmg 安装方式一样，把小猫拉进文件夹即可</p><h5 id="Step3-运行ClashX，并导入订阅信息"><a href="#Step3-运行ClashX，并导入订阅信息" class="headerlink" title="Step3: 运行ClashX，并导入订阅信息"></a>Step3: 运行ClashX，并导入订阅信息</h5><p>点击顶部猫猫图案，打开路径为：<code>配置&gt;托管配置&gt;管理&gt;添加</code></p><blockquote><p>❕ClashX运行后出现在屏幕最上方的栏栏，如果有装了收起美化插件的话，记得展开找到猫猫。一开始我还以为我没装上🤦‍♀️</p></blockquote><h5 id="Step4-开起代理"><a href="#Step4-开起代理" class="headerlink" title="Step4: 开起代理"></a>Step4: 开起代理</h5><p>点击 <code>设置为系统代理</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RoadMap之无痛线性代数学习</title>
    <link href="/2022/03/10/RoadMap%E4%B9%8B%E6%97%A0%E7%97%9B%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/03/10/RoadMap%E4%B9%8B%E6%97%A0%E7%97%9B%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>现在状态：</p><p>期望状态：</p><ol><li>达到精通者水平</li><li>满足学习工作中的应用需求</li></ol><blockquote><p>使用并理解矩阵</p><p>求解Ax=b，通过消元(pivots, multipliers, back substitution, invertibility of A, factorization into A = LU)</p><p>Ax=b的完全解(column space containing b, rank of A, nullspace of A and special solutions to Ax = 0 from row reduced R)</p><p>基和维度（四个基础子空间）</p><p>最小二乘解（closest line by understanding projections）</p><p>施密特正则化(factorization into A = QR)</p><p>秩的性质(leading to the cofactor formula and the sum over all n! permutations, applications to inv(A) and volume)</p><p>特征值和特征向量(diagonalizing A, computing powers A^k and matrix exponentials to solve difference and differential equations)</p><p>对称矩阵和正定矩阵(real eigenvalues and orthogonal eigenvectors, tests for x’Ax &gt; 0, applications)</p><p>线性变换，基变换（connected to the Singular Value Decomposition - orthonormal bases that diagonalize A）</p><p>工程中的线性代数(graphs and networks, Markov matrices, Fourier matrix, Fast Fourier Transform, linear programming)</p></blockquote><p>困难与疑虑：</p><h2 id="输入源"><a href="#输入源" class="headerlink" title="输入源"></a>输入源</h2><ol><li><p><a href="https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/">MIT 18.06 linear algebra @Prof. Gilbert Strang</a></p><blockquote><ul><li><a href="https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/calendar/">日程表</a></li><li>阅读材料</li><li>课程笔记</li><li>作业</li><li>考试</li><li>学习材料</li></ul></blockquote></li><li><p><a href="https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/">MIT 18.06SC linear algera @Prof. Gilbert Strang</a></p></li><li><p><a href="https://www.coursera.org/learn/matrix-algebra-engineers?specialization=mathematics-engineers">HKUST for engineers</a></p></li><li><p><a href="https://stanford.edu/class/engr108/">Stanford EE103/ENGR108 introduction to matrix method @Stephrn Boyd</a></p><blockquote><ul><li><a href="https://stanford.edu/class/engr108/schedule.html">日程表</a></li></ul></blockquote></li><li><p><a href="https://open.163.com/newview/movie/courseintro?newurl=/special/opencourse/daishu.html">线性代数 @Prof. Gilbert Strang</a></p></li></ol><p>教材</p><p><a href="https://www.math.brown.edu/streil/papers/LADW/LADW_2017-09-04.pdf">Linear Algebra Done Wrong</a></p><p><a href="https://link.springer.com/book/10.1007/978-3-319-11080-6">Linear Algebra Done RIght</a></p><p>框架</p><p><a href="https://www.mubucm.com/doc/2WbwzwFj7dH">我的框架</a></p><p>基于输入源整理</p><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><p>总时长：100hours</p><p>路径：HKUST course 为主 MIT SC 为辅</p><p>然后看Stanford ee103补充</p><h2 id="一些茶余饭后阅读"><a href="#一些茶余饭后阅读" class="headerlink" title="一些茶余饭后阅读"></a>一些茶余饭后阅读</h2><p><a href="https://www.zhihu.com/question/20534668">知乎问题-如何理解线性代数</a></p><p><a href="http://www.matrix67.com/blog/archives/4294">matrix67-我们需要怎样的数学教育</a></p><p><a href="http://www.matrix67.com/blog/archives/3803">cramer悖论</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于向量的二三事</title>
    <link href="/2022/03/10/%E5%85%B3%E4%BA%8E%E5%90%91%E9%87%8F%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/"/>
    <url>/2022/03/10/%E5%85%B3%E4%BA%8E%E5%90%91%E9%87%8F%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>学会的最好方式就是输出，用自己的话把内容讲一遍。这就是我的学习成果啦，主要是总结下多元微积分的第一章节，向量相关的内容。</p><p>在一元微积分中，我们处理的对象是「数」，从我们会数手指头开始就陪伴我们的东西，而到了多元微积分，处理的对象不再是形单影只的「数」或者说「标量 (Scalar)」，而是本篇的主角——「向量 (Vector)」。因此诸多的多元微积分课程也以向量的介绍作为开篇，关于向量更多的介绍其实在线性代数中，在这里我们只是把与微积分计算相关的内容拎出来。</p>]]></content>
    
    
    <categories>
      
      <category>微积分</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微积分, 数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RoadMap之无痛微积分学习</title>
    <link href="/2022/03/10/RoadMap%E4%B9%8B%E6%97%A0%E7%97%9B%E5%BE%AE%E7%A7%AF%E5%88%86%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/03/10/RoadMap%E4%B9%8B%E6%97%A0%E7%97%9B%E5%BE%AE%E7%A7%AF%E5%88%86%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>现在状态：</p><ol><li>学过微积分，但学得不是很好</li><li>在学习工作中不是经常使用，但还是有用到的概率</li></ol><p>期望状态：</p><ol><li>达到高级新手水平</li><li>满足学习工作中的应用需求</li></ol><blockquote><ul><li>对微分方程使用极限定义和微分规则</li><li>使用渐近线，关键点画函数草图，使用微分测试函数的增减性，凸凹性</li><li>使用微分求解应用最大最小问题</li><li>使用微分求解related rate 问题</li><li>使用黎曼和和积分基础理论估计积分</li><li>使用高级积分技巧算积分，such as inverse substitution, partial fractions and integration by parts.</li><li>使用 L hosptial rule 来evaluate certain indefinite forms</li><li>确定不定积分的收敛性，计算不定积分的convergent</li><li>找到函数一个点附近的泰勒级数展开</li></ul></blockquote><p>困难与疑虑：</p><ol><li>不知道该如何学</li><li>希望有系统性框架，但由于不是十分需要，又不想花费过多时间</li><li>害怕微分方程</li></ol><h2 id="输入源选择"><a href="#输入源选择" class="headerlink" title="输入源选择"></a>输入源选择</h2><ol><li><p><a href="https://ocw.mit.edu/courses/mathematics/18-01-single-variable-calculus-fall-2005/">MIT 18.01 single variable calculus @Prof. Jason Starr</a></p><blockquote><ul><li><a href="https://ocw.mit.edu/courses/mathematics/18-01-single-variable-calculus-fall-2005/calendar/">日程表</a></li><li>阅读材料</li><li>课程笔记</li><li>作业</li><li>考试</li><li>学习材料</li></ul></blockquote></li><li><p><a href="https://ocw.mit.edu/courses/mathematics/18-01sc-single-variable-calculus-fall-2010/index.htm">MIT 18.01SC single variable calculus @Prof. David Jerison</a></p><blockquote><p>SC 课程指 self-contained，专门为自学者设计的课程</p></blockquote></li><li><p><a href="https://ocw.mit.edu/courses/mathematics/18-02-multivariable-calculus-spring-2006/">MIT 18.02 multivariable calculus @Prof. David Jerison @Prof. Arthur Mattuck</a></p></li><li><p><a href="https://ocw.mit.edu/courses/mathematics/18-02sc-multivariable-calculus-fall-2010/">MIT 18.02SC multivariable calculus @Prof. Denis Auroux</a></p></li><li><p><a href="https://www.coursera.org/learn/vector-calculus-engineers">HKUST vector-calculus for engineers </a></p></li><li><p><a href="https://open.163.com/newview/movie/courseintro?newurl=/special/opencourse/weijifen.html">微积分重点 @Prof. Gilbert Strang</a></p></li><li><p>[MIT 教材] Simmons, George F. <em>Calculus with Analytic Geometry</em>. 2nd ed. New York, NY: McGraw-Hill, October 1, 1995. ISBN: 007</p></li><li><p><a href="https://pimbook.org/">A Programmer’s Introduction to Mathematics</a> 【包括线代和微积分，有空仔细看看，书】</p></li></ol><p>框架： </p><p><a href="https://www.mubucm.com/doc/r7L8M9hWlH">我的框架</a></p><p>基于输入源整理</p><h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><p>总时长：150 hours + 150 hours 【一元&amp;多元】</p><p>路径：HKUST course 为主 MIT SC 为辅</p><p>开始时间：2022年3月10日</p><h2 id="听课记录"><a href="#听课记录" class="headerlink" title="听课记录"></a>听课记录</h2><h3 id="3月10日"><a href="#3月10日" class="headerlink" title="3月10日"></a>3月10日</h3><ul><li><p><input checked="" disabled="" type="checkbox">  Welcome ｜ 关于课程的整体介绍，功能onboarding</p><blockquote><p>2 Video: 6min</p><p>3 Reading: 3min</p><p>1 Quiz: 15min</p><p>1 Discuss: 1min</p><p>Sum: 25 min</p><p>——————————————————————</p><h6 id="诊断练习-5题"><a href="#诊断练习-5题" class="headerlink" title="诊断练习 5题"></a>诊断练习 5题</h6><ol><li><p>求导公式</p></li><li><p>泰勒展开</p></li><li><p>链式法则</p></li><li><p>substitution</p></li><li><p>integration</p><blockquote><p>淦！被唬住了！反向求导一下就知道了！</p></blockquote></li></ol><p><a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">Latex格式参考1</a></p><p><a href="https://www.coursera.org/learn/vector-calculus-engineers/supplement/HUA8n/how-to-write-math-in-the-discussions-using-mathjax">Latex格式参考2</a></p></blockquote></li><li><p><input checked="" disabled="" type="checkbox">  Intro to Week one | 关于向量章节的介绍</p><blockquote><p>1 Video: 1min</p><p>Sum: 1 min</p></blockquote></li><li><p><input checked="" disabled="" type="checkbox">  Vectors ｜ Vectors，Cartesian Coordinates，dot product，cross product</p><blockquote><p>4 +2 Video: 37min + 17 min</p><p>9 Reading: 75min</p><p>1 Quiz: 15min</p><p>Sum: 144 min</p></blockquote><p>————3月10日，预测170min，实际174min————-</p></li><li><p><input disabled="" type="checkbox">  Analytic Geometry ｜</p><blockquote><p>2 Video: 22min</p><p>2 Reading: 15 min</p><p>1 Quiz: 15min</p></blockquote></li><li><p><input disabled="" type="checkbox">  Vecotr Algebra ｜ </p><blockquote><p>4 Video: 43 min</p><p>11 Reading: 70 min</p><p>1 Quize: 15ming </p></blockquote></li><li><p><input disabled="" type="checkbox">  Fields ｜ </p><blockquote><p>1 Video: 8min</p><p>1 Reading: 5 min</p></blockquote></li><li><p><input disabled="" type="checkbox">  Quiz | []/10</p></li></ul><p>问题@2022.3.10：</p><ol><li><p>这门课的风格适合我吗？ ✅</p><blockquote><p>适合，coursera的设计好像也很懂学习心理学，UI好看舒服</p><p>没有中文字幕，只有英文字幕 语速较慢 能听懂</p><ul><li><input checked="" disabled="" type="checkbox"> 了解中文翻译组，好的加入了，就是好像翻译内容没有更新？</li><li><input disabled="" type="checkbox"> <a href="https://translate-coursera.org/new_gtc/app/#/app/course_detail/PMjPbaIqEemvjBKUOppBiA">课程翻译链接</a></li></ul></blockquote></li><li><p>我似乎已经了解向量和矩阵了，我还可以学到什么新东西？✒️</p><blockquote><p>rethinking，对点积和叉乘的理解加深了一点，从投影的角度看待，从几何的角度。加深了position vector 和 displacement vector 的概念。</p></blockquote></li><li><p>我设定的学习计划合理吗？⭕️</p><blockquote><p>内部课程安排似乎不太均匀，再观察一下</p></blockquote></li></ol><p>问题@2022.3.</p><ol><li>Lavi-civita 和 kronecker-delta 是啥玩意</li><li>可以看一小节的一半中止作为一次学习吗</li></ol><h4 id="更新笔记"><a href="#更新笔记" class="headerlink" title="更新笔记"></a>更新笔记</h4><a href="/2022/03/10/%E5%85%B3%E4%BA%8E%E5%90%91%E9%87%8F%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/" title="向量章节笔记更新中">向量章节笔记更新中</a><p>—–待整理⬇️——-</p><p><strong>向量</strong></p><p>交换律 communication</p><p>结合律 association</p><p>线性 scalar multiply</p><p>分配律 distribution</p><p>标量scalar是一个数number，标量有长度和方向，但没有位置</p><p>为了可以用数字or公式表示向量，需要坐标系+单位向量，笛卡尔的名字是谁翻译的！</p><p>几个重要向量</p><p>单位向量 uint vector i, j, k 来自四元数</p><p>位置向量 position vector，尾巴在原点，头在点的位置，指向点的向量，长度由向量的绝对值表示</p><p>位移向量 displacement vector 两个向量的差</p><p>Pythagorean theorem 毕达哥拉斯定理，勾股定理</p><p>dot product ， 也叫scalar product「虽然是向量之间的乘」，点积的结果是一个标量，一个长度，物理意义是一个向量投影到另一个向量上的长度</p><p>corss product， 也叫 vector product，因为结果是个向量</p><p>AxB = - BxA 交换行，行列式符号改变</p><p>代数定义</p><p>几何定义</p><h5 id="Analytic-Geometry"><a href="#Analytic-Geometry" class="headerlink" title="Analytic Geometry"></a>Analytic Geometry</h5><p>用向量来表示线和平面</p><p>线是一个向量，由初始的位置向量和一个与时间有关的位移向量相加而成，包含时间t时的表达式为parametric，把t消掉是non-parametric</p><p>normal vector 为什么把垂直向量叫这个</p><p>cyclincal</p><p>einstein summation convention 省去求和符号</p><h5 id="Vector-Algebra"><a href="#Vector-Algebra" class="headerlink" title="Vector Algebra"></a>Vector Algebra</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>RoadMap之Robotics</title>
    <link href="/2022/03/09/RoadMap%E4%B9%8B%E6%88%90%E4%B8%BARobotics%E7%B2%BE%E9%80%9A%E8%80%85/"/>
    <url>/2022/03/09/RoadMap%E4%B9%8B%E6%88%90%E4%B8%BARobotics%E7%B2%BE%E9%80%9A%E8%80%85/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本版本为初始化版本，结合本人情况并参考以下<a href="###%E5%8F%82%E8%80%83%E5%86%85%E5%AE%B9">内容</a>进行整理。根据学习进程推进将不断进行更新调整。</p><h3 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h3><h3 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h3><h5 id="个人给出的学习计划"><a href="#个人给出的学习计划" class="headerlink" title="个人给出的学习计划"></a>个人给出的学习计划</h5><p><a href="https://zhuanlan.zhihu.com/p/22266788">机器人工程师学习计划</a></p><blockquote><p>硕哥写于18年，比较诚恳真切，但学习路径有些许陡峭并前紧后松，可能比较适合当时当地的本科生，但我觉得不是十分科学的安排。</p></blockquote><p><a href="https://allshire.org/getting-started-robotics/">Getting started in Robotics</a></p><blockquote><p>发于2021的博客，给出总览，但细节不多</p></blockquote><h5 id="学校的培养计划"><a href="#学校的培养计划" class="headerlink" title="学校的培养计划"></a>学校的培养计划</h5><p><a href="https://www.mihaileric.com/posts/complete-artificial-intelligence-undergraduate-course-plan/">斯坦福4年AI课程计划</a></p><blockquote><p>缺少了EE部分内容，仅参考适用部分</p></blockquote><p><a href="http://catalog.mit.edu/degree-charts/electrical-engineering-computer-science-course-6-2/">MIT EECS BA degree charts 6-2</a></p><blockquote><p>MIT EECS 本科学位的培养方案，根据方案筛选了贴切 Robotics需求以及我本人感兴趣的部分见[MIT EECS课程](####MIT EECS课程)</p></blockquote><p><a href="https://www.eecs.mit.edu/academics/undergraduate-programs/curriculum/6-2-electrical-engineering-and-computer-science/">MIT EECS BA roadmap 6-2</a> </p><blockquote><p>MIT官方针对EECS学生设计的RoadMap的PDF版本</p></blockquote><h5 id="课程学习心得"><a href="#课程学习心得" class="headerlink" title="课程学习心得"></a>课程学习心得</h5><p><a href="https://lieuzhenghong.com/moocs/">CS自学记录@LieuZhengHong</a></p><blockquote><p>互联网冲浪遇到的网课学习经验分享</p></blockquote><h2 id="四大核心领域"><a href="#四大核心领域" class="headerlink" title="四大核心领域"></a>四大核心领域</h2><p>机器人学的四个核心领域</p><ul><li>感知：视觉传感器，图像传感器，触觉和力传感器，惯导等</li><li>认知：人工智能，知识表达，规划，任务调度，机器学习等</li><li>行为：运动学，动力学，控制，manipulation &amp; locomotion 等</li><li>数学基础：最优估计，微分几何，计算几何，运筹学</li></ul><p>🚩 上述分类为硕哥给出的版本，时隔四年我觉得这个分类不是很贴切，待更新我认为的版本。</p><h2 id="RoadMap-V0-1"><a href="#RoadMap-V0-1" class="headerlink" title="RoadMap V0.1"></a>RoadMap V0.1</h2><h3 id="必修"><a href="#必修" class="headerlink" title="必修"></a>必修</h3><ol><li>微积分 <a href="/2022/03/10/RoadMap%E4%B9%8B%E6%97%A0%E7%97%9B%E5%BE%AE%E7%A7%AF%E5%88%86%E5%AD%A6%E4%B9%A0/" title="我的学习记录">我的学习记录</a></li><li></li></ol><h3 id="等待"><a href="#等待" class="headerlink" title="等待"></a>等待</h3><h4 id="第一年"><a href="#第一年" class="headerlink" title="第一年"></a>第一年</h4><blockquote><p>让我们时间倒回2015年～2016年，那一年我真实上课的内容是：</p><ul><li>线性代数与空间解析几何 ✔️</li><li>微积分 ✔️</li><li>电路分析 ✔️</li><li>大学物理 ✖️</li><li>C语言 ✔️</li><li>ACM算法与程序设计 ⭕️</li></ul></blockquote><ul><li><p><input checked="" disabled="" type="checkbox">  微积分 </p></li><li><p><input disabled="" type="checkbox">  线性代数<a href="/2022/03/10/RoadMap%E4%B9%8B%E6%97%A0%E7%97%9B%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%AD%A6%E4%B9%A0/" title="我的学习记录">我的学习记录</a> 「<strong>优秀的工程师和科学家在职业生涯中要学至少五次线性代数</strong>」</p></li><li><p><input disabled="" type="checkbox">  电路</p><blockquote><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-002-circuits-and-electronics-spring-2007/index.htm">MIT 6.002 Circuits and electronics</a></p><ul><li>第一门电路课，有模电有数电</li></ul></blockquote></li><li><p><input disabled="" type="checkbox">  编程</p><blockquote><p>关于编程我的想法是106B和6.0001或者6.00一起先学，接着106L，107，107E</p></blockquote><blockquote><ul><li><p><input disabled="" type="checkbox">  C++</p><blockquote><p><a href="https://web.stanford.edu/class/cs106b/">Stanford CS106B</a></p><blockquote><ul><li><a href="https://web.stanford.edu/class/cs106b/schedule.html">日程表</a></li><li><a href="https://www.bilibili.com/video/BV1CV411z798?from=search&seid=14587466304005615292&spm_id_from=333.337.0.0">B站视频链接</a></li><li>C++入门友好，涉及一些数据结构算法内容</li></ul></blockquote><p><a href="https://web.stanford.edu/class/cs106l/index.html#calendar">Stanford CS106L</a></p><blockquote><ul><li><a href="https://web.stanford.edu/class/cs106l/index.html#calendar">日程表</a></li><li><a href="https://www.bilibili.com/video/BV1yJ411m7CE?from=search&seid=4804255471253472034&spm_id_from=333.337.0.0">B站视频链接</a></li><li>C++语言特性本身</li></ul></blockquote></blockquote></li><li><p><input disabled="" type="checkbox">  C 「用C的一维数组和指针来实现矩阵的加法、乘法、求逆等操作」「有点计算机系统的味」</p><blockquote><p><a href="https://web.stanford.edu/class/archive/cs/cs107/cs107.1224/">Stanford CS107</a></p><blockquote><ul><li><a href="https://web.stanford.edu/class/archive/cs/cs107/cs107.1224/calendar">日程表</a></li><li><a href="https://www.bilibili.com/video/BV1ua4y1a72K?from=search&seid=2500009805400834486&spm_id_from=333.337.0.0">B站视频</a></li><li>使用内存和指针编写C程序，C程序地址空间和编译/运行时行为的准确模型，Unix开发环境，识别运行瓶颈！【这是我想要的课！】</li></ul></blockquote><p><a href="https://cs107e.github.io/">Stanford CS107E</a></p><blockquote><ul><li><a href="https://cs107e.github.io/schedule/">日程表</a></li><li><a href="https://www.youtube.com/channel/UCVxh8KKa_sdzRnHxF9POcJA/search?query=cs107e">油管视频</a> 【没找到完整的，只有片段】</li><li>结合树莓派的C编程！啊爱了！</li></ul></blockquote></blockquote></li><li><p><input disabled="" type="checkbox">  Python</p><blockquote><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/index.htm">MIT 6.0001 Introduction to Computer Science Programming in Python</a></p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008/">MIT 6.00 Introduction to Computer Science</a></p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/">MIT 6.00SC</a></p><p><a href="https://link.zhihu.com/?target=http://open.163.com/special/opencourse/bianchengdaolun.html">MIT 6.00 中文版</a></p><p>【在6.0001+6.0002和6.00选择一下】</p><p>Anacoda，Numpy</p><p>「通过Numpy帮助自己解决线性代数问题」</p></blockquote></li><li><p><input disabled="" type="checkbox">  Matlab&amp;Simulink 「与控制理论搭配使用」</p><blockquote><p><a href="https://ctms.engin.umich.edu/CTMS/index.php?aux=Home">自动控制系统的Simulink互动网站</a></p><p><a href="https://www.mathworks.com/help/control/ug/control-of-an-inverted-pendulum-on-a-cart.html;jsessionid=75de5d16cc8a0140e91adf0cb99a">倒立摆的实现</a></p><p>倒立摆是机器人学中一个非常重要的模型，因为火箭、导弹、双足机器人、四足机器人，基本都是倒立摆的变形。你自己实现出来的simulink模型一定要存好，以后可能还会再拿出来仔细看。</p></blockquote></li><li><p><input disabled="" type="checkbox">  HTML+Javascripts </p><blockquote><p><a href="https://www.w3schools.com/">一个互动网站</a></p><blockquote><p>把网站左侧的“Learn HTML”、“Learn CSS”、“Learn Javascript”和“Learn JQuery”学完就行，别的部分还有很多花哨的技术，没有必要去学了。</p></blockquote><p><a href="https://threejs.org/examples/#webgl_animation_keyframes">观摩javascripts培养兴趣</a></p><blockquote><p>学习原因：</p><ul><li>面向对象思想，DOM</li><li>工具like json，AJAX</li><li>近年来一个流行的趋势是用webkit嵌入程序用HTML和Javascript作为图形界面的后端，而在机器人操作系统ROS里，通过rosbridge可以非常方便地把机器人程序的数据传递到websocket上</li></ul></blockquote><p>如果你按照我之前说的方法探索了一些HTML和Javascript的技术，那么JQuery，bootstrap，AngularJS你已经多多少少知道是怎么回事了。web后端的技术，比如PHP和MySQL，也可以了解一下，LAMP要学会怎么配置。</p></blockquote></li><li><p><input disabled="" type="checkbox">  Java</p><blockquote><p><a href="https://web.mit.edu/6.031/www/sp21/">MIT 6.031 Elements of Software Construction</a></p><p>了解关键的软件工程理念，包括接口、表示独立性、规格、不变性、抽象数据类型、设计模式和单元测试</p></blockquote></li></ul></blockquote><blockquote><p>参考书</p><p><a href="https://www.stroustrup.com/Tour.html">A tour of C++</a></p><p><a href="http://songjinshan.com/akabook/zh/index.html">一站式C编程</a> 【这个网站好像停运了？看起来怪怪的】</p></blockquote></li><li><p><input disabled="" type="checkbox">  暑假作业</p><blockquote><ul><li><input disabled="" type="checkbox"> 个人主页</li><li><input disabled="" type="checkbox"> 代数与离散数学</li><li><input disabled="" type="checkbox"> 看文章</li><li><input disabled="" type="checkbox"> 数学之美</li></ul></blockquote></li></ul><hr><h4 id="第二年"><a href="#第二年" class="headerlink" title="第二年"></a>第二年</h4><blockquote><p>时间倒回2016～2017年，那一年我真实上课内容是</p><ul><li>信号与系统 ✔️</li><li>模拟电路基础</li><li>数字逻辑设计及应用</li><li>自动控制原理</li><li>复变函数 ⭕️</li><li>概率论与数理统计  ✔️</li><li>微处理器系统结构与嵌入式系统</li><li>计算机软件基础</li><li>传感器原理及应用</li><li>大学物理2  ✖️</li><li>机械工程基础 ✖️</li></ul></blockquote><ul><li><p><input disabled="" type="checkbox">  概率论与统计</p><blockquote><p>斯坦福CS109  <a href="https://web.stanford.edu/class/cs109/">https://web.stanford.edu/class/cs109/</a></p></blockquote><blockquote><p>MIT 18.05 <a href="https://ocw.mit.edu/courses/mathematics/18-05-introduction-to-probability-and-statistics-spring-2014/">https://ocw.mit.edu/courses/mathematics/18-05-introduction-to-probability-and-statistics-spring-2014/</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  离散数学/计算数学基础 </p><blockquote><p><a href="https://web.stanford.edu/class/cs103/">Stanford CS103</a> 【先修课程106B】</p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/">MIT 6.042</a> 【先修课程 单变量微积分】</p><p>你要基本掌握“群是什么”，能够用代数的眼光去证明&quot;det(AB) = det(A)det(B)&quot;，还要能理解“用一张纸就可以变出克莱因瓶”（当然是在四维空间里）。另外，你这个时候也要能够意识到自己需要再学一遍线性代数。</p><p>MIT 6.042 离散数学</p></blockquote></li><li><p><input disabled="" type="checkbox">  微分方程</p><blockquote><p>不确定是不是一定需要，但觉得是需要的</p><p><a href="https://ocw.mit.edu/courses/mathematics/18-03-differential-equations-spring-2010/">MIT 18.03 Differential Equations</a></p><p><a href="https://ocw.mit.edu/courses/mathematics/18-03sc-differential-equations-fall-2011/">MIT 18.03SC Differential Equations</a></p></blockquote></li><li><p><input disabled="" type="checkbox"> </p></li><li><p><input disabled="" type="checkbox">  信号与系统</p><blockquote><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-003-signals-and-systems-fall-2011/index.htm">MIT 6.003 Singals and Systems</a></p><p>三大变换（傅里叶变换，拉普拉斯变换，Z变换）</p></blockquote></li><li><p><input disabled="" type="checkbox">  算法设计与分析 <a href="https://stanford-cs161.github.io/winter2022/">Stanford CS161</a> 【先修课程103】</p><blockquote><p>MIT 6.046 <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  数值计算</p></li><li><p><input disabled="" type="checkbox">  数字电路，嵌入式系统</p><blockquote><p>基本的数字电路知识、数模转换</p></blockquote></li><li><p><input disabled="" type="checkbox">  机器学习</p><blockquote><p><a href="http://cs229.stanford.edu/logistics_faq.html">Standford CS229 Machine Learning</a></p><ul><li>先修课程：CS109，CS106，多元微积分与线代</li></ul><p>西瓜书</p></blockquote></li><li><p><input disabled="" type="checkbox">  计算系统结构</p><blockquote><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-004-computation-structures-spring-2017/index.htm">MIT 6.004 Computation Structure</a></p><ul><li>本课程介绍数字系统的架构，强调广泛技术共有的结构原则。它涵盖了多级实施策略、新原语（如门、指令、程序、流程）的定义以及使用较低级别元素的机械化等主题。它还包括分析潜在的并发性、优先级限制和性能措施、管道和多维系统、指令集设计问题以及对当代软件结构的架构支持。</li></ul></blockquote></li><li><p><input disabled="" type="checkbox">  单片机</p><blockquote><p>俗话说，没有什么嵌入式系统是一块STM32实现不了的，如果有，就用两块。STM32是ARM Cortex‑M家族中最为广泛应用的一款单片机，在网上也有很多的教材和开发板可供选择。在国内著名的电子论坛<a href="https://link.zhihu.com/?target=http://www.amobbs.com/forum-3020-1.html">STM32/8 分论坛帖子清单 (amoBBS 阿莫电子论坛)</a>上，有很多参考资料，有问题也可以在这里和大家讨论学习。</p><p>51单片机、AVR单片机、STM32单片机原理，UART、SPI、I2C、CAN等协议的原理和数据收发，STM32开发板的使用，微电子焊接</p><p>单片机开发，电机驱动的开发，码盘和超声波等传感器的读取，底盘运动学的计算，PID调试，任务调度逻辑的调试，舵机控制</p><p>在STM32上，有freeRTOS，uCOS，Vxworks这么几种实时操作系统；Linux是一种非实时操作系统，但是可以通过打补丁变成实时操作系统。这些操作系统的细节在机器人开发中都会多多少少被涉及到，同学们可以随时上Google和CSDN去查大神们的介绍。</p></blockquote></li><li><p><input disabled="" type="checkbox">  自动控制原理，传感器</p><blockquote><p>电机转动和驱动的原理，PID的原理，调试四轮机器人底盘的移动，基本的传感器如陀螺仪、码盘、红外线、超声波的原理和读取方式，</p></blockquote></li><li><p><input disabled="" type="checkbox">  计算机网络</p><blockquote><p>网络知识如配置IP配置路由器等。</p><p>连接路由器、配置网络，网络配置就是连连路由器插插网线，但是Linux系统下配置网络有时会非常麻烦，一定要多积累这方面的知识，因为将来你造的机器人多半会顶着一个无线路由器跑来跑去，甚至有的机器人上各个模块自己就能组起一个小局域网。这些技能的熟练掌握需要你花很多时间去做真正能用的机器人来练手。</p></blockquote></li><li><p><input disabled="" type="checkbox">  Altium Designer做图、制板、焊板。</p><blockquote><p>从现在开始，就给自己积累一个工作记录，可以就是简单的txt文件，记录你做过所有板子的bug、解决方案、学到的原理图、PCB layout的注意事项等等</p></blockquote></li><li><p><input disabled="" type="checkbox">  复变函数</p></li></ul><ul><li><input disabled="" type="checkbox"> 暑假作业</li></ul><blockquote><p>如果大二的暑假没有参加机器人比赛，可以做一个舵机机器人，比如6条腿的蜘蛛，比如码垛机器人。舵机是机器人工程师的好朋友，一定要好好掌握。</p><p>把自己的一些课程设计和小项目放在了Github上面</p><p>在面向对象的程序课里面，一定要积累3000行左右的代码的开发经验。经典的面向对象程序设计的练习通常是写游戏，比如俄罗斯方块，吃豆人等等，一定要自己能够做到完全手写一个完整的项目出来。</p></blockquote><hr><h4 id="第三年"><a href="#第三年" class="headerlink" title="第三年"></a>第三年</h4><ul><li><p><input disabled="" type="checkbox">  凸优化</p><blockquote><p><a href="https://web.stanford.edu/class/ee364a/">Stanford CS364a Convec Optimization @Boyd</a></p><p>Boyd 的配套的教科书</p></blockquote><ul><li><input disabled="" type="checkbox"> 手写gradient descend，barrier method</li></ul></li><li><p><input disabled="" type="checkbox">  算法导论</p><blockquote><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-spring-2020/index.htm">MIT 6.006 Introduction to algorithm</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  概率图模型</p><blockquote><p><a href="https://cs.stanford.edu/~ermon/cs228/index.html">Stanford CS 228 Probabilistic Graphical Model</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  人工智能概论 </p><blockquote><p>这门课包括了人工智能领域所运用的研究，比如搜索，游戏，逻辑以及图像还有机器学习算法的应用。提纲挈领，比想象中有趣</p><p><a href="https://stanford-cs221.github.io/spring2020/">Stanford CS221 <strong>Artificial Intelligence: Principles and Techniques</strong></a></p></blockquote><blockquote><p>MIT 6.033 2010年的AI 会不会太古老了 <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-033-computer-system-engineering-spring-2018/syllabus/">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-033-computer-system-engineering-spring-2018/syllabus/</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  软件工程</p><blockquote><p>大三的时候学校应该会开设软件工程的课程。不管你是不是这个专业，上不上这门课，都应该主动去听一听，甚至跟着课程的设计作业一起做一做。软件工程我觉得是机器人工程师必须具备的意识，因为一个机器人系统里涉及大量的硬件系统和软件功能，软件的部分往往还会涉及不同的语言、不同的编译环境、不同的开发工具链。几个人合作的话，大家的专业背景、编程习惯都不相同，这就导致不同的代码和模块之间的协议沟通非常复杂，必须尽早用UML和其他软件工程的工具帮助团队理解和互相沟通。</p></blockquote></li><li><p><input disabled="" type="checkbox">  编译器</p><blockquote><p><a href="https://web.stanford.edu/class/cs143/">Stanford CS143 Compilers</a></p><blockquote><p><a href="https://web.stanford.edu/class/cs143/syllabus.html">日程表</a></p></blockquote><p>主要是讲编译器背后的设计和理论，你学了之后，至少应该了解一个编译器是如何构建的，还有编译器的模块化组件，也需要了解。如果你对语义识别感兴趣，可以好好琢磨一下编译器的设计和传统的自然语言处理堆栈之间的相似之处，非常有趣。</p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-035-computer-language-engineering-spring-2010/index.htm">MIT 6.035 Computer Language Engineering</a></p><blockquote><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-035-computer-language-engineering-spring-2010/syllabus/">日程表</a></p></blockquote></blockquote></li><li><p><input disabled="" type="checkbox">  数据库</p><blockquote><p><a href="https://cs145-fa19.github.io/">Stanford CS145 Data Management &amp; Data System</a></p><p>主要讲数据库管理系统背后的原则，比如关系数据模型、索引、模式等主题，但凡你想成为数据专家或者机器学习工程师，就必须要懂得数据库的原理。【先修课程CS103，CS107】</p></blockquote></li><li><p><input disabled="" type="checkbox">  并行计算</p><blockquote><p>并行计算这门课会讲Apache Spark到GPU这些系统背后的原理</p><p><a href="https://gfxcourses.stanford.edu/cs149/fall19/lectures">Stanford CS149 Parallel Computing</a></p><p><a href="https://ocw.mit.edu/courses/mathematics/18-337j-parallel-computing-fall-2011/">MIT 6.338 Parallel Computing</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  数据挖掘</p><blockquote><p><a href="https://web.stanford.edu/class/cs246/">Stanford CS246 Data Mining</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  CNN</p><blockquote><p><a href="http://cs231n.stanford.edu/">Stanford CS231n Convolutional Neural Networks for Visual Recognition@Li Fei-fei</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  OpenCV</p></li><li><p><input disabled="" type="checkbox">  机器人</p><blockquote><p><a href="http://courses.csail.mit.edu/6.141/spring2014/pub/syllabus.html">MIT 6.141 Robotics: Science and Systems</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  搞一个自己的四旋翼</p><blockquote><p>四旋翼飞行器的机械部分最简单，但是算法比较复杂。对于大三学生来说，从零开始一步到位写一个稳定的飞控比较困难，因为飞控里面有很多细小的知识点要注意。目前我没有发现什么比较好的书籍推荐，已有的一些关于四旋翼系统的书要么太浅（上来就教你焊电路），要么太深（上来就教你state estimation），听说 <a href="https://www.zhihu.com/people/liu-top">@Liu Top</a>的exbot小组在写一个教材，我是非常期待的。学习四旋翼飞行器有下面几个步骤：</p><p>第一步：自己调一个小四轴飞起来</p><p>现在开源社区的人言必pixhawk，其实我觉得从学习的角度来说，pixhawk太贵，而且不适合学习，我比较推荐的是 <a href="https://link.zhihu.com/?target=https://chiplab7.taobao.com/">首页-第七实验室</a> 这家淘宝店卖的STM32F405飞控，买回来以后自己再随便买个机架（比如大疆F450）、接收机和遥控，就能按照飞控板附带的学习资料、调试软件飞起来。</p><p>第二步：看硬件图、读代码</p><p>chiplab7的飞控板附带一大堆学习资料，对加速度计、陀螺和磁感计都有很仔细的解释，硬件链路图也很详细。chiplab7淘宝掌柜的又很认真负责，我学用的时候，发现代码有bug和看不懂的地方，都可以直接找掌柜问。</p><p>看完代码以后，对一个飞控系统的基本模块：姿态解算、控制解算、混控输出、遥控器处理、嵌入式处理就很明白了。然而这里面有很多技术是需要另外学习的。除了基本的嵌入式编程以外，还有要把大二大三学的信号处理方面的知识再捡起来看看。因为飞行器在空中有振动，会让加速度计产生噪声，为了把这些噪声去除掉，需要对加速度计给出的信号做低通滤波处理，如何选择滤波器的参数呢？如果滤波滤得太狠，延迟就会比较大，对控制的表现会有影响；如果滤波滤得不够，可能会有一些低频的噪声偶尔会出现，导致加速度计的观测不能用。另外最重要的是要理解姿态解算和控制解算这两块知识。chiplab7的飞控板的代码采用的是最简单的互补滤波算法做为姿态解算模块，然后控制解算是对欧拉角的三个角度做闭环PID控制，基本都是基础的基础了。</p><p>第三步：小修小改加深理解</p><p>chiplab7的飞控是靠气压计定高的，飞行效果非常奔放。这时候可以淘宝买个20块钱的超声波模块，然后自己写个高度环去稳定飞控的定高表现。</p><p>我觉得这个过程至关重要，因为高度控制相对来说是个比较直观理解PID控制的方式，而且chiplab7的飞控加高度控制非常好加。工作量不大，因为改善效果很显著，所以可以让人很有成就感，加深继续学习的乐趣。</p><p>第四步：理解核心的数学和控制知识</p><p>这一部分大三是肯定来不及学的，但是我还是在这里列出来，因为这些知识你之后都需要慢慢学，我也会在之后不断重复提到这些知识点。</p><p>姿态解算和控制解算涉及的知识有：</p><p>\1. 刚体姿态的表示、运动学方程和动力学方程。主要是对牛顿-欧拉方程的认识和理解、刚体姿态的欧拉角表示法、姿态与角速度的关系等等。</p><p>这部分说复杂不复杂，说简单也不简单，我同样是没有找到一本完整的书全都介绍过的，是学了好几个不同的书和论文以后搞明白的。现在看起来是从维基百科入手比较靠谱。</p><p>\2. 自动控制原理。讲PID的书和文章就多了去了，没有太多复杂的书。</p><p>\3. 线性估计基本原理。其实就是互补滤波：<a href="https://link.zhihu.com/?target=http://www.pieter-jan.com/node/11">Reading a IMU Without Kalman: The Complementary Filter</a> 。拿这个关键词百度各种搜就会了。</p><p>第五步：重头开始造轮子</p><p>知乎著名网友vczh曾经说过，学习要抱着勇于造轮子的心态才能进步。所以在熟悉了别人飞控基础上，可以自己重头造一个飞控的轮子。可以自己从芯片开始重新画一个飞控板，读读STM32的芯片手册、读读各种传感器的芯片手册，自己手画一个飞控的原理图、做PCB layout、制板自己焊元件，全套花不了1000块钱，能够加深很多对硬件的理解。这一部分如果大三没空，也可以不搞了。</p></blockquote><blockquote><p>制造整个机器人的过程中要特别重视文档的积累。在你大三末期，你可能随着学校的机器人队备战比赛，你可能主力负责一台机器人。你应该自己列一个excel表格，把机器人用了几颗螺丝，几根导线，每个零件的规格是什么，都列出来。这个表格一方面可以用来帮助团队管理机器人的物料，一方面也是你自己的经验技术积累，将来你做的其他机器人可能多多少少都是Robocon、RoboMasters机器人的变形。</p></blockquote></li><li><p><input disabled="" type="checkbox">  积累自己的buglist</p><blockquote><p>另一个积累是建一个自己的buglist，buglist包括什么呢，可以像冷大这样：<a href="https://www.zhihu.com/question/46824735/answer/115202408?from=profile_answer_card">做控制、机器人等算法工程师是怎样一种体验？ - 冷哲的回答</a>，就简单把一些自己的发生过的问题和最后的解决办法罗列下来。比如说“杜邦线接插位不稳固容易脱开，接好后应该用电工胶布再裹一圈”，“外发给淘宝加工的机械图纸，要特别注意和加工商沟通有没有漏掉一些细节，如沉头螺丝孔，关键的倒角”等等。你也可以帮其他机器人的问题也做这样的记录。buglist可以就是一个简单的文本文件，如果你一直往里面积累自己工作中的记录，等你将来工作了，这个文件可能会值很多钱。</p></blockquote></li><li><p><input disabled="" type="checkbox">  操作系统原理，嵌入式系统原理</p><blockquote><p><a href="https://web.stanford.edu/~ouster/cgi-bin/cs140-spring20/lectures.php">Stanford CS140 Operating Systems</a></p><blockquote><ul><li><a href="https://web.stanford.edu/~ouster/cgi-bin/cs140-spring20/lectures.php">日程表</a></li><li>没有视频，要不看看MIT的</li></ul></blockquote><p>操作系统，你如果想要擅长系统编程，就一定要上这门课，这门课是讲如何从头开始搭建一个操作系统，不仅需要设计系统，还需要明白如何调试和代码管理。如果你不明白，你手下的人敲完：sudo rm -rf /*就撤了，你该如何拯救你的代码？</p></blockquote></li></ul><h4 id="第四年"><a href="#第四年" class="headerlink" title="第四年"></a>第四年</h4><ul><li><p><input disabled="" type="checkbox">  关于选学校</p><blockquote><p>CMU：世界第一的机器人研究院卡耐基梅隆大学，</p><p>MIT：麻省理工学院的CSAIL实验室。</p><p>UCB：</p><p>北美传统计算机四大名校（麻省理工学院，卡耐基梅隆大学，斯坦福大学，加州大学伯克利分校）里，除了斯坦福大学热火朝天在搞人工智能以外，其他几个学校的机器人研究都很不错。</p><p>如果想接触到最好的机器人资源，你要选择有钱的实验室，而不是有名的实验室。</p></blockquote></li><li><p><input disabled="" type="checkbox">  数学in deep</p><blockquote><ul><li>抽象代数</li><li>拓扑教材（有一本很神奇的书叫做Topopogy Without Tears <a href="https://link.zhihu.com/?target=http://www.topologywithouttears.net/">http://www.topologywithouttears.net/</a>），这样才理解了为什么数学分析要用奇怪的符号去解释一些看起来很浅显的道理。</li></ul></blockquote></li><li><p><input disabled="" type="checkbox">  读书 </p><blockquote><p>大四可以开始读一些著名入门书籍，我把这些书不分先后地列出来，你没有必要全部去读，而且每本书先读前几章就够了，能读多少尽量读多少。</p><ul><li><p><a href="https://www.amazon.com/Linear-System-Electrical-Computer-Engineering/dp/0199959579">线性系统理论</a></p></li><li><p><a href="https://www.robots.ox.ac.uk/~vgg/hzbook/">Multiple View Geometry in Computer</a> 🌟</p></li><li><p><a href="https://www.amazon.com/Linear-Estimation-Thomas-Kailath/dp/0130224642">线性估计</a> 🌟</p></li><li><p><a href="https://www.eecis.udel.edu/~cer/arv/readings/old_mkss.pdf">An Invitation to 3-D Vision</a> 🌟</p></li><li><p><a href="https://www.amazon.com/Modern-Control-Systems-12th-Richard/dp/0136024580">Modertn Control Systems</a></p></li><li><p><a href="http://authors.library.caltech.edu/25023/1/Housner-HudsonDyn80.pdf">Rigid Body Dynamics</a></p><blockquote><p>说实话刚体动力学理论我没有找到特别好的书。但是刚体动力学理论很重要。</p></blockquote></li><li><p><a href="http://www.cds.caltech.edu/~murray/amwiki/index.php/Main_Page">Feedback Systems: An Introduction for Scientists and Engineers</a></p></li><li><p><a href="https://www.cs.unc.edu/~welch/kalman/media/pdf/maybeck_ch1.pdf">Stochastic models estimation and control</a></p></li></ul></blockquote></li><li><p><input disabled="" type="checkbox">  毕业设计的选题</p><blockquote><p>关于毕业设计的选题，我推荐这么几个：</p><ul><li><p>手写双目视觉里程计。涉及到图像处理、特征匹配、位置解算、空间变换等等。</p></li><li><p>手写四旋翼飞行器基于GPS的轨迹规划。涉及到深挖四旋翼飞行器的运动原理、IMU原理、轨迹生成和优化等。</p></li><li><p>造一个被推了也不会倒的双足舵机机器人。涉及到舵机控制、倒立摆建模、动力学分析、PID控制、IMU原理等。</p></li><li><p>深度学习训练一个小车追人跑。涉及到深度学习工具包使用、数据集采集、数据集分析、小车控制等。</p></li><li><p>机械臂给人端茶倒水。这个相对来说土豪一点，因为能直接拿来用的机械臂都很贵，这个要看实验室有没有条件了。涉及到多自由度机械臂原理的学习、工具包的使用、轨迹规划等等。</p></li></ul></blockquote></li></ul><h4 id="第五年"><a href="#第五年" class="headerlink" title="第五年"></a>第五年</h4><ul><li><p><input disabled="" type="checkbox">  机器人视觉定位算法</p><blockquote><p>如果研究机器人视觉定位，几种常用的定位算法：PTAM（<a href="https://link.zhihu.com/?target=http://www.robots.ox.ac.uk/~gk/PTAM/">Parallel Tracking and Mapping for Small AR Workspaces (PTAM)</a>），ROS的标配VO（<a href="https://link.zhihu.com/?target=http://wiki.ros.org/viso2_ros">viso2_ros - ROS Wiki</a>），SVO（<a href="https://link.zhihu.com/?target=https://github.com/uzh-rpg/rpg_svo">GitHub - uzh-rpg/rpg_svo: Semi-direct Visual Odometry</a>），LSD-SLAM（<a href="https://link.zhihu.com/?target=http://vision.in.tum.de/research/vslam/lsdslam">http://vision.in.tum.de/research/vslam/lsdslam</a>）ORB-SLAM（<a href="https://link.zhihu.com/?target=https://github.com/raulmur/ORB_SLAM2">GitHub - raulmur/ORB_SLAM2: Real-Time SLAM for Monocular, Stereo and RGB-D Cameras, with Loop Detection and Relocalization Capabilities</a>），都必须自己学习之后全部跑一遍。</p><p>由于SLAM这两年很火，研究的人很多，所以网上可以参考的资料也很多，比如<a href="https://link.zhihu.com/?target=https://github.com/hcdth011/ROS-Hydro-SLAM">https://github.com/hcdth011/ROS-Hydro-SLAM</a>，就在ROS上实现了几种定位算法的对比。</p></blockquote></li><li><p><input disabled="" type="checkbox">  知识结合应用</p><blockquote><ul><li>旋转表示法（欧拉角、四元数、旋转矩阵）</li><li>数值计算怎么防止矩阵出现数值问题</li><li>把凸优化、卡尔曼滤波还有多自由度机械臂的控制学习一下。这三个领域的知识，是任何一种机器人都会用的到比较难的知识。</li></ul></blockquote></li><li><p><input disabled="" type="checkbox">  多自由度的机械臂的控制</p><blockquote><p>难点在于机械臂的运动学正反解、运动学控制和动力学控制，基本是一个建模分析和数值算法实现的问题。如果你所在的学校没有一个财力雄厚的机器人实验室的话，你基本上没有机会接触到多自由度的机械臂。这时候之前学到的Simulink和就要学的Gazebo就派上用场了，你可以用Simscape里面的刚体搭一个多自由度机械臂，然后通过Simulink仿真去学习机械臂的控制；也可以用Gazebo的URDF语言写一个机械臂，然后通过Gazebo和ROS的接口去控制机械臂；也可以用ROS里面的著名工具包<a href="https://link.zhihu.com/?target=http://moveit.ros.org/">MoveIt! Motion Planning Framework</a>，不过MoveIt的问题是，他只能仿真运动学，而不能仿真动力学。工业领域对多自由度的机械臂控制通常用一个叫做D-H表示法的建模工具（<a href="https://link.zhihu.com/?target=https://en.wikipedia.org/wiki/Denavit%E2%80%93Hartenberg_parameters">Denavit</a>），这个东西我并不太会。我只会向同学们推荐我导师的著作<a href="http://www.cds.caltech.edu/~murray/books/MLS/pdf/mls94-complete.pdf">A mathematical introduction to robotic manipulation</a></p></blockquote><p>有一个非常神奇的事实：《A mathematical introduction to robotic manipulation》这本机械臂控制领域的著名教材的第二章和计算机视觉领域的著名教材《An Invitation to 3-D Vision》的第二章基本是一样的，都在讲旋转表示法。这是因为</p><p>李群和李代数是刚体旋转表示背后的数学理论，如果想要深挖一些，</p></li><li><p><input disabled="" type="checkbox">  搭建仿真系统</p><blockquote><p>我觉得做仿真系统的能力直接衡量了机器人工程师的技术水平。当你开始要搭一个仿真系统的时候，第一步是通过欧拉方程和牛顿方程确定刚体的运动特点，甚至要自己写刚体二阶微分方程；第二步是确定刚体之间的互联关系，设计不同类型的关节，如果有软性连接需要加入弹簧阻尼模型；第三步是确定被仿真的刚体系统会不会和外界产生碰撞或者其他形式的力，如果有的话，需要设计合适的接触力和摩擦力仿真的模型。多旋翼飞行器的仿真是很简单的，不需要考虑什么接触力。但是多自由度机械臂基本都需要仿真接触力，不和物理世界去交互的机械臂只有很小的实用意义。而能够自行运动locomotion系统，比如双足、多足机器人，则涉及到更多的接触力，多到接触力都会影响仿真系统的数值稳定性。搭建一个仿真系统需要很强的系统建模能力和数值分析的能力，虽然Simulink、Gazebo、Vrep提供了不同程度的工具简化你的工作，但是要让仿真系统能够稳定运行，必须要能深入其中的细节。有些看起来很高大上的仿真工具，比如Nvida的PhysX，在仿真的时候是忽略掉科里奥利力的，如果不理解仿真的本质，可能就会忽略这一个重要的缺陷。</p></blockquote></li></ul><h4 id="第六年"><a href="#第六年" class="headerlink" title="第六年"></a>第六年</h4><ul><li><p><input disabled="" type="checkbox">  现在的状态</p><blockquote><ul><li>看到一个机器人，能够很果断地分析出它用了什么传感器、执行器，计算平台大概是什么量级，他的执行机构能够承受多少力量。</li><li>看到一个新的算法，能够大约判断清楚它的执行流程，在什么环节做了优化。</li><li>看到一个新的没学过的知识，能够分析出它和你以前学过的什么知识有联系，你还需要再学什么才能弄明白这个知识点。</li><li>积累了几万行代码的经验</li><li>熟练地谈论谁家的电机回差小，谁家的电机线性程度好。</li></ul></blockquote></li><li><p><input disabled="" type="checkbox">  FPGA和GPU优化算法</p></li><li><p><input disabled="" type="checkbox">  魔改Linux内核</p></li><li><p><input disabled="" type="checkbox">  玩玩液压系统</p></li><li><p><input disabled="" type="checkbox">  强化学习</p></li><li><p><input disabled="" type="checkbox">  计算机图形学或者计算力学</p></li><li><p><input disabled="" type="checkbox">  对未来的判断</p><blockquote><ul><li>对视觉定位和传感器融合来说，SLAM急需新的突破，目前通过几何约束去实现loop closure看起来已经走入了死路，没法有更多的发展了，下一步可行的方向是与深度学习进行结合。具体的一些介绍可以阅读行业中大牛的一篇文章<a href="https://link.zhihu.com/?target=http://www.computervisionblog.com/2016/01/why-slam-matters-future-of-real-time.html">http://www.computervisionblog.com/2016/01/why-slam-matters-future-of-real-time.html</a>，记述了几个业界大牛们最新的观点。传感器融合技术，目前还有很多问题可以探索，因为传感器的延时、不均匀的信号，会给定位系统造成困扰，如何去除这些干扰，需要建立比较复杂的非线性优化问题，具体可以关注香港科技大学Shaojie Shen的工作。</li><li>对于多自由度机械手和机器人的locomotion来说，这里面还有非常多可以探索的研究问题。我前面提过接触力和摩擦力很难仿真，大神告诉我现在没有任何一种工具和理论能把接触力和摩擦力正确仿真出来，因此如何在机器人系统里妥善处理对这些力的控制，就是很难的问题了。现在业界的一个前沿发展方向，也是利用机器学习技术来帮助机器人学会处理这些外力，不过人类目前最优秀的多自由度机器人系统，Berkeley的Brett机器人，叠几块积木就要用十分钟（<a href="https://link.zhihu.com/?target=http://news.berkeley.edu/2015/05/21/deep-learning-robot-masters-skills-via-trial-and-error/">New ‘deep learning’ technique enables robot mastery of skills via trial and error</a>），显然还有很多提升的空间。这方面的问题同学可以关注知乎大神<a href="https://www.zhihu.com/people/70bcce80353eccd2938cbfa2ac856aab">@戴泓楷</a><a href="https://www.zhihu.com/people/0eeca981bb238839881694643181fa91">@周佳骥</a>。</li></ul></blockquote></li><li><p><a href="https://people.eecs.berkeley.edu/~pabbeel/cs287-fa19/">UCB  CS287 Advanced Robotics</a></p><blockquote><ul><li>日程表</li><li><a href="">概率机器人 书</a></li></ul></blockquote><blockquote><ul><li>油管视频</li><li>有RL，有控制规划，有粒子滤波器啥的，期待</li><li>了解最先进的机器人系统下的数学和算法。这些技术大多主要基于优化和概率推理——这两个领域在现代人工智能中都广泛适用。本课程的一个预期副作用是一般来说加强您在这些领域的专业知识。</li><li>PhD课程</li></ul></blockquote></li></ul><h4 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h4><ul><li><p><input disabled="" type="checkbox">  卡尔曼滤波，学会一至两种证明方法</p></li><li><p><input disabled="" type="checkbox">  李群，旋转表示法</p><blockquote><p>所有的旋转表示法都可以归纳为一种优雅的李群结构：SO(3)群。而计算机视觉和机械臂控制都涉及到理解刚体的旋转，事实上用计算系统去观测和控制所有的刚体构成的系统，理解旋转都是很关键的问题。旋转表示法应该作为研究生阶段的一个重要学习的知识点。</p><p>可以看这篇文章An elementary introduction to groups and representations的前50页（<a href="https://link.zhihu.com/?target=http://www.cmls.polytechnique.fr/perso/renard/Hall_Group.pdf">http://www.cmls.polytechnique.fr/perso/renard/Hall_Group.pdf</a>）。这是我自己读着觉得最好的文章，当然网上也有很多其他的介绍。</p><p>李群李代数推荐state estimation for robotics: a matrix lie group approach，第6,7两章，比较简单而且可以独立出来看。</p></blockquote></li><li><p><input disabled="" type="checkbox">  makefile，cmake</p><blockquote><p>当你把C学得差不多，开始要学写包含多个头文件的程序时，一定要同时学习makefile的知识。这时候要上网去搜“Makefile详解”（<a href="https://link.zhihu.com/?target=http://tieba.baidu.com/p/591519800">Makefile详解（超级好）_mingw吧</a>）这篇文章看。</p></blockquote></li><li><p><input disabled="" type="checkbox">  Latex与矢量图</p><blockquote><p>作为国际国内第一写作神器，学习资料在网上有很多。Latex的学习和使用同样也是需要不断地熟能生巧，多写多练就熟悉了。写毕业论文有个问题是怎么做出精美的矢量图，我推荐<a href="https://link.zhihu.com/?target=https://inkscape.org/en/">Draw Freely | Inkscape</a>，一个比Illustrator更轻量化、但是有些功能反而更强大的免费软件。</p></blockquote></li><li><p><input disabled="" type="checkbox">  Linux与ROS</p><blockquote><p>而对于机器人工程师来说，从现在到可预见的未来里，C是最好的语言，Linux是最好的操作系统，这都毋庸置疑。甚至对于Linux的发行版该选哪个，我们都是很少有质疑的：Ubuntu（<a href="https://link.zhihu.com/?target=http://www.ubuntu.com/global">The leading OS for PC, tablet, phone and cloud</a>）。原因是机器人操作系统ROS（<a href="https://link.zhihu.com/?target=http://www.ros.org/">ROS.org | Powering the world’s robots</a>）是基于Ubuntu开发的，因此在Ubuntu上运行最稳定。</p></blockquote></li><li><p><input disabled="" type="checkbox">  ROS从入门到精通需要至少一年以上的时间，你必须不断地用，不断地尝试新的代码和硬件，才能对它熟悉起来。</p><blockquote><p>你可能早就听说了ROS的大名，但是最好不要在大四之前去碰它。因为ROS用了很多操作系统和网络的底层技术。我在知乎回答<a href="https://www.zhihu.com/question/21958225/answer/20255931">高手可以谈谈ROS机器人操作平台开发的一些经验吗？ - YY硕的回答</a>里有简单的介绍。ROS的设计目标是把机器人的控制和传感器处理的软件和它的硬件隔离开，用上ROS以后，你可以方便地用到很多能直接跑的软件代码。但是ROS从入门到精通需要至少一年以上的时间，你必须不断地用，不断地尝试新的代码和硬件，才能对它熟悉起来。</p><p>ROS的可视化工具Rviz里面对于机器人旋转的表示用的是四元数，而在你之前研究四旋翼飞行器时，里面的代码表示旋转用的是欧拉角，做姿态解算用的可能是四元数。这个时候要开始有意识地去学习旋转表示法之间的区别和联系。</p></blockquote></li><li><p><input disabled="" type="checkbox">  Gazebo</p></li><li><p><input disabled="" type="checkbox">  Vrep</p></li><li><p><input disabled="" type="checkbox">  g2o</p><blockquote><p>g2o能够整合bundle adjustment 和structure-from-motion这两大计算机视觉里的关键问题，可以说是一种很好的计算思想了，非常有必要学习一下g2o。</p></blockquote></li><li><p><input disabled="" type="checkbox">  git</p><blockquote><p>因此你的机器人如果有嵌入式Linux系统在里面，一定要尽早顶起来路由器，代码定时提交SVN或者git。</p><p>做过的机器人视频、写过的技术报告和文章（最好是英文的）放在上面github</p></blockquote></li></ul><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><h4 id="现状："><a href="#现状：" class="headerlink" title="现状："></a>现状：</h4><ol><li>参加过机器人大赛，了解机器人的制作工作粗略流程，但许多技术细节内容已经忘记了</li><li>有一定的数学，编程基础，但是熟练度不够</li><li>正在从事擦边的工作，不知道走向正轨的明晰道路</li><li>乐于学计算机相关的底层内容，抗拒电路的底层内容（模电阴影挥之不去）</li></ol><h4 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h4><ol><li>达到 Robotics 精通者水平</li><li>念一个相关的博士学位</li><li>在业界获得一定的reputation</li></ol><h4 id="困难："><a href="#困难：" class="headerlink" title="困难："></a>困难：</h4><ul><li>缺少实践硬件：传感器，电机，3D打印机，加工件，……</li><li>编程语言不够熟练</li><li>理论基础不牢固</li></ul><h2 id="一些培养方案"><a href="#一些培养方案" class="headerlink" title="一些培养方案"></a>一些培养方案</h2><h4 id="CMU-Robotics-PhD"><a href="#CMU-Robotics-PhD" class="headerlink" title="CMU Robotics PhD"></a>CMU Robotics PhD</h4><p><a href="https://www.ri.cmu.edu/wp-content/uploads/2017/01/COSAug2016.pdf">CMU机器人学博士的课程分类</a></p><h4 id="MIT-EECS课程"><a href="#MIT-EECS课程" class="headerlink" title="MIT EECS课程"></a>MIT EECS课程</h4><h5 id="想上但没有的课"><a href="#想上但没有的课" class="headerlink" title="想上但没有的课"></a>想上但没有的课</h5><p>6.01 <a href="http://student.mit.edu/catalog/search.cgi?search=6.01">Introduction to EECS via Robotics</a> 【好像没有线上课，心碎】</p><blockquote><p>有一个同编号的网课，不是它</p></blockquote><p>6.08 Introduction to EECS via Interconnected Embedded Systems</p><hr><h5 id="基础课-五选三"><a href="#基础课-五选三" class="headerlink" title="基础课*五选三"></a>基础课*五选三</h5><ul><li><p><input checked="" disabled="" type="checkbox">  6.002  Circuits and Electronics</p></li><li><p><input checked="" disabled="" type="checkbox">  6.003  <del>Signal Processing</del> Signal and System</p></li><li><p><input checked="" disabled="" type="checkbox">  6.004   Computation Structures</p></li><li><p><input checked="" disabled="" type="checkbox">  6.006  Introduction to Algorithms</p></li><li><p><input checked="" disabled="" type="checkbox">  6.009  Fundamentals of Programming </p><blockquote><p><a href="https://py.mit.edu/spring22">https://py.mit.edu/spring22</a></p><p>本课程介绍编程的基本概念。旨在培养将基本方法从编程语言应用于抽象问题的技能。主题包括编程和 Python 基础知识、计算概念、软件工程、算法技术、数据类型和递归。实验组件包括软件设计、施工和设计实施。</p></blockquote></li></ul><h5 id="进阶课-七选三"><a href="#进阶课-七选三" class="headerlink" title="进阶课*七选三"></a>进阶课*七选三</h5><ul><li><p><input disabled="" type="checkbox">  6.011  Signals, Systems and Inference</p><blockquote><p>状态估计，状态过滤，高年级课程，有点像现代控制理论的样子，不是很懂这个课的属性</p></blockquote></li><li><p><input disabled="" type="checkbox">  6.012  Nanoelectronics and Computing Systems</p><blockquote><p>好像是进阶版的模电，😨</p></blockquote></li><li><p><input checked="" disabled="" type="checkbox">  6.031  Elements of Software Construction</p></li><li><p><input disabled="" type="checkbox">  6.033  Computer Systems Engineering (CI-M)</p><blockquote><p>高年级课程 </p><p>操作系统+网络+分布式系统+安全</p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-033-computer-system-engineering-spring-2018/syllabus/">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-033-computer-system-engineering-spring-2018/syllabus/</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  6.034  Artificial Intelligence</p><blockquote><p>斯坦福有差不多的课，比这个新，观察一下</p></blockquote></li><li><p><input disabled="" type="checkbox">  6.045  Computability and Complexity Theory</p><blockquote><p>logic, math and machines</p><p>computational complexity</p><p>randomness, adversaries and the physical world</p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-045j-automata-computability-and-complexity-spring-2011/syllabus/">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-045j-automata-computability-and-complexity-spring-2011/syllabus/</a></p></blockquote></li></ul><ul><li><input checked="" disabled="" type="checkbox"> 6.046  Design and Analysis of Algorithms</li></ul><h5 id="应用课-十选二"><a href="#应用课-十选二" class="headerlink" title="应用课*十选二"></a>应用课*十选二</h5><ul><li><p><input disabled="" type="checkbox">  6.026  Biomedical Signal and Image Processing</p></li><li><p><input checked="" disabled="" type="checkbox">  6.035  Computer Language Engineering</p></li></ul><ul><li><p><input disabled="" type="checkbox">  6.101  introductory Analog Electronics Laboratory</p><blockquote><p>模电实验</p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-101-introductory-analog-electronics-laboratory-spring-2007/index.htm">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-101-introductory-analog-electronics-laboratory-spring-2007/index.htm</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  6.111  Digital Systems Laboratory</p><blockquote><p>数电实验Verilog</p></blockquote><blockquote><p>有verilog FPGA</p><p><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-111-introductory-digital-systems-laboratory-spring-2006/index.htm">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-111-introductory-digital-systems-laboratory-spring-2006/index.htm</a></p></blockquote></li><li><p><input disabled="" type="checkbox">  6.115  Microcomputer Project Laboratory (CI-M)</p></li><li><p><input checked="" disabled="" type="checkbox">  6.141 Robotics: Science and Systems (CI-M)</p><blockquote><p><a href="http://courses.csail.mit.edu/6.141/spring2014/index.html#0">http://courses.csail.mit.edu/6.141/spring2014/index.html#0</a></p><p>是我喜欢的！</p></blockquote></li><li><p><input disabled="" type="checkbox">  6.338  Parallel Computing and Scientific Machine Learning</p></li><li><p><input disabled="" type="checkbox">  6.402  Modeling with Machine Learning: from Algorithms to Applications</p></li><li><p><input disabled="" type="checkbox">  6.819 / 6.869 Advances in Computer Vision</p></li></ul><h5 id="图了热闹课"><a href="#图了热闹课" class="headerlink" title="图了热闹课"></a>图了热闹课</h5><ul><li><input disabled="" type="checkbox"> 6.073 Creating Video Games</li></ul>]]></content>
    
    
    <categories>
      
      <category>Robotics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RoadMap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阅读笔记之打造超人学习</title>
    <link href="/2022/03/08/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%89%93%E9%80%A0%E8%B6%85%E4%BA%BA%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/03/08/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%89%93%E9%80%A0%E8%B6%85%E4%BA%BA%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>更新：2022-03-09</p><h2 id="ORID"><a href="#ORID" class="headerlink" title="ORID"></a>ORID</h2><h3 id="客观事实"><a href="#客观事实" class="headerlink" title="客观事实"></a>客观事实</h3><ol><li>6小时念完<a href="https://github.com/xdite/learn-hack">《打造超人学习》</a></li><li>粗略笔记：8929字 | 第一次精读笔记：8729字</li><li>第一次读繁体书</li></ol><p>作者写作时会开源更新在 github 上，阅读模式是 MacBook + Safari + 阅读模式 + Typora，读的时候复制粘贴，读完再整理，体验不错。此外粗略笔记都放在一起，搜索时候也很方便。</p><p>关于作者 xdite，有点八卦地去搜了一下，互联网上最多的痕迹是和李笑来的币圈撕逼大战，夹杂着一些关于他们一起开的全栈培训课的吐槽，有趣的是本书里也恰好举了全栈营的例子。把一个人做了什么和写了什么结合起来看也可以获得额外的信息。</p><blockquote><p>xdite 的其他书</p><ul><li><input disabled="" type="checkbox"> <a href="https://github.com/xdite/memory-hack">打造超人大脑</a> 「学会如何操作自己大脑」</li><li><input disabled="" type="checkbox"> <a href="https://github.com/xdite/mind-hack">打造超人思维</a>「学会怎么改变大脑的解决模式」</li><li><input disabled="" type="checkbox"> <a href="https://github.com/xdite/reading-system">快速读书系统</a></li><li><input disabled="" type="checkbox"> <a href="https://github.com/xdite?tab=repositories&q=hack&type=&language=&sort=">打造超人笔记</a>「正在更新」</li><li><input disabled="" type="checkbox"> <a href="https://github.com/xdite/remote-work">远距工作这样做</a></li></ul></blockquote><h3 id="感受反应"><a href="#感受反应" class="headerlink" title="感受反应"></a>感受反应</h3><ol><li>愉悦，兴奋，迫不及待</li><li>个别字不是很确定，但根据上下文不影响阅读，确认我的繁体字阅读能力ok</li><li>整理的耗时似乎和阅读持平，感觉到疲惫与烦躁，也有可能是身体不舒服导致的</li></ol><h3 id="意义感悟"><a href="#意义感悟" class="headerlink" title="意义感悟"></a>意义感悟</h3><p>这是关于如何「给脑子打补丁升级」的方法论</p><p>关于从本书中学到的四个关键方法</p><ol><li>快乐高效学习模式</li><li>三轮读书法</li><li>上课之道</li><li>ORID模式</li></ol><p><strong>关联</strong>：以学习模式为中心，学习模式包括了逆向规划，具体操作，以及避免失败的及时调整策略。学习输入最重要的两条路径是读书和上课，针对两种途径给出了更细致的应用。学习的目的是输出，针对最基础的输出给出了ORID模式，也可以拓展到任何的文字输出框架。</p><h3 id="决定计划"><a href="#决定计划" class="headerlink" title="决定计划"></a>决定计划</h3><ol><li>整理粗略笔记为精制笔记（也就是现在这篇）✅</li><li>将觉得可行的操作付诸实践<ul><li>机器人</li><li>硬笔书法</li><li>英语口语写作</li><li>冥想</li><li>第二门外语</li><li>工作</li></ul></li><li>6个月后回顾（@2022.9.9）</li></ol><h2 id="错误之处"><a href="#错误之处" class="headerlink" title="错误之处"></a>错误之处</h2><ol><li>的地得不分</li><li>偏后章节的排序序号有错误重复遗漏等</li></ol><h2 id="新知"><a href="#新知" class="headerlink" title="新知"></a>新知</h2><ol><li><p>一个比喻：「学习系统」是「信息下载器」</p></li><li><p>构建好的「学习系统」：「高效」与「快乐」</p></li><li><p>提升学习的关键能力是建立认知：人生是「RPG游戏」，摒弃传统教育的「填空记忆游戏」策略，建立自然学习策略</p><blockquote><p>我从小喜欢玩RPG游戏以及看小说的原因就是我喜欢扮演体验不同的人生。还在基础教育阶段我就意识到学校的模拟功能，幸运的是我接受的教育并不是一种做题家的教育方式，所以并没有在学习这件事情遭受什么创伤。</p></blockquote></li><li><p>关于学习类型的分类：</p><ul><li>自然学习 ✅  「莫名其妙就学会了」</li><li>刻意学习        「我知道我在学」<ul><li>主动学习 ✅  「我要我学」</li><li>被动学习 ❌  「别人要我学」</li></ul></li></ul></li><li><p>布鲁姆教育分类学将知识分为四种类型：事实性知识，概念性知识，程序性知识，元认知知识</p><p>![截屏2022-03-08 下午4.56.55](fig/截屏2022-03-08 下午4.56.55.png)</p></li><li><p>不要从基础学起，从流程学起，从流程性知识开始学。基础知识的定义？ 错误的定义：事实性知识，概念性知识，正确的定义：程序性知识，</p><blockquote><p>相当于是总览大局，再细分拆解。这好像和故事容易记住是一个原因，人的脑子倾向于记住一个连续的脉络而不是离散的枝叶。</p></blockquote><blockquote><p>或许我本性中渴望看到结局再度过的想法是没错的，但错误的在于我没有意识到需要有信念感，相信未来会是我想要的样子。</p></blockquote></li><li><p>关于记忆科学的一些 maybe 民科阐述</p><ul><li><p>人类应当是学会了才会记住，而记住的未必学得会</p><blockquote><p>说得太对了！我觉得我的记忆力下降的原因是不是本质在于我并没有学会……</p></blockquote></li></ul></li></ol><ul><li><p>容易被记住的东西：有逻辑，有相关性，有结构</p></li><li><p>长期记忆构建的原理：</p><ul><li>网状记忆结构</li><li>肌肉记忆，把资讯记录在肌肉了里，多进行实验练习</li></ul></li><li><p>人脑会拼命遗忘的原因：资讯冲刷，记忆失去联结</p></li><li><p>大脑的记忆冷藏时间只有一天</p><ul><li>艾宾浩斯遗忘曲线知识叙述了暂存区存储的时效问题</li><li>艾宾浩斯没说的关键点：在乎的资讯，建立网状结构，逻辑，故事，经历</li></ul></li><li><p>陈述性记忆vs非陈述性记忆（有关动作的记忆）</p></li></ul><ol start="8"><li><p>镜像神经元复制功能：看别人示范一遍，自己大概能复制粗略的流程</p><blockquote><p>还挺民科的这个</p></blockquote></li><li><p>高手的过人之处在于找流程，练习，拆解，重新发明</p></li><li><p>在学习的时候要训练系统1「直觉反射系统」而非系统2「理性思考系统」，刻意练习的对象应该是程序性知识优先并写进系统1。</p><blockquote><p>哈哈，作者的解释插图好可爱，系统1在主驾，系统2在副驾，教练与学员的关系？</p></blockquote><p>《快思慢想》中认为在熟悉环境下人类用系统1，在陌生情境下使用系统2</p><p>本书作者认为在熟悉环境下人类使用系统1，在陌生情境下系统2启动寻找一个最相似的系统1去处理。理性是慢下来搜寻过去可以快速解决的方案。</p><blockquote><p>这也可以解释 路径依赖 的产生</p></blockquote></li><li><p>心流与成瘾本质上是一件事，上瘾的本质=平稳的固定行为（就是习惯）+奖励系统</p><blockquote><p>关键在于正确的奖励设计？</p><p>当我在写博客or做笔记时我的奖励是什么？被公开的感觉，期待有一天会被看到，得到了新知识，整理了脑袋的快感？</p></blockquote><ul><li><p>习惯的特征：</p><ul><li>简单的动作</li><li>重复的动作</li><li>立即的正面反馈</li><li>平稳且轻快的情绪反馈（小确幸）</li></ul></li></ul></li><li><p>15分钟时保持注意力的最佳长度，留存学习内容的最佳长度</p><blockquote><p>控制自己每篇文章的阅读时长在15min ？</p></blockquote></li><li><p>对一件事情上瘾or习惯的前5天，前5次很关键</p></li><li><p>对于学习人类本质追求的是：</p><ul><li>越快学到越好</li><li>重复，确定，完成</li><li>看到自己明显进步</li><li>看到自己达到最近的目标</li></ul></li><li><p>PBL系统：Points 分数，Badge 徽章， Leaderboard 排行榜</p></li><li><p>游戏四阶段：discover 探索 -&gt; onboarding 新手引导 -&gt; scaffolding 脚手架 -&gt; endgame 收尾阶段</p></li><li><p>16格笔记法 用于读书 乌龙明月 有兴趣再了解 <a href="https://www.jianshu.com/p/00c5826794e1">一个举例</a></p></li><li><p>德雷福斯模型（Dreyfus model of skill acquisition），按照技能熟练度分为：专家，精通者，胜任者，高级新手，新手五个等级。每一层的知识是指数型成长速学习法。下表时间为自然时间，可以根据技巧加速。</p><p><a href="https://github.com/xdite/learn-hack/blob/master/images/20211023164727.png"><img src="fig/20211023164727.png" alt="img"></a></p><p>这堆计算方式有点把我绕晕了…… 结论是</p><ul><li>胜任者：90天</li><li>精通者：8个月</li><li>专家：2年</li></ul><p>时间成本与金钱成本的计算方法：</p><ul><li>途径：书籍，上课（以书籍为基准成本）</li><li>假设：一本书价格50元，一本书解决3个问题，一本书的耗时？小时，成为高级新手要解决81个问题，需要27本书</li><li>时间成本：27*x = </li><li>金钱成本：27*50 = 1350 元</li></ul></li><li><p>世界上所有问题的三部曲理论</p><blockquote><p>事實上，我認為幾乎世界上所有的問題、答案基本上都是 3 次方的，而他們是以這樣的結構存在</p><ul><li>1,2,3</li><li>前，中，後</li><li>輸入，處理，輸出</li><li>是什麼，為什麼，如何做</li></ul><p>又或者是各種領域自己的結構</p><ul><li>(學習) - 目標、過程、如何持續</li><li>(做生意) - 招客、服務、成長</li><li>(剖析財報) - 利潤率，總資產週轉率，槓桿倍數</li></ul></blockquote></li><li><p>稳定的「大便」输出依赖于模版</p><blockquote><p>这算不算一种，结构性写作？</p></blockquote></li><li><p>作者的工作习惯</p><blockquote><p>工作日时将网站与找到的答案一五一十粘到任务系统的进度更新上「对我来说就用markdown文件？」</p><p>只有自己看得懂记得什么也无所谓，即使浏览器关掉了也可以回来研究</p><p>养成学会写一个功能后，就写成一篇教程</p><p>下次再写的时候看着自己的教程贴code就可以了</p><p>周末写教程，将粘贴内容进行整理</p></blockquote></li></ol><h2 id="快乐高效学习操作手册"><a href="#快乐高效学习操作手册" class="headerlink" title="快乐高效学习操作手册"></a>快乐高效学习操作手册</h2><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h4><p>找一张纸&amp;一支笔</p><ol><li><p>找到学习目标，写下现在的状态和想达成的目标，「定义起点与终点」</p></li><li><p>将目标逆向拆解为任务清单，设计一个导航系统🌟 「这可能需要重复更新的」</p><ul><li><p>在现在状态与未来目标间画一条线，并在线的上下方写下自己关于这件事情所有的困难，抱怨，疑惑，「写下困难之处，一般人失败的原因」</p></li><li><p>将这些困难与抱怨，反过来变成一个个题目，并加tag，再分类排序「将困难之处反过来变成踏脚石」</p><ul><li>可以使用的tag：</li><li>可以使用的分类：分为3～4个阶段，每个阶段就是一支铅笔，形成三支铅笔结构图</li></ul></li><li><p>可以得到一个大致可行的解题顺序和策略，整理出「预」学习地图</p><ul><li><p>铅笔式导航设计：从起点A到终点B的过程像一直两头尖的铅笔，发散，约束，收敛</p><blockquote><p>这不是和乔帮主的connect the dots 有异曲同工之妙</p></blockquote><p><a href="https://github.com/xdite/learn-hack/blob/master/images/20211024145540.png"><img src="fig/20211024145540.png" alt="img" style="zoom:50%;" /></a></p></li><li><p>对于每一支铅笔，按顺序挑出四个重要的东西</p></li><li><blockquote><p>如果找不到答案，你也可以按照以下处理</p><ol><li><strong>XX 是什么？</strong></li><li><strong>为何重要？</strong></li><li><strong>如何做到？</strong></li><li><strong>如何快10倍做到？</strong></li></ol></blockquote></li></ul></li></ul><blockquote><p>关于逆向拆解任务清单这个，之前隐隐约约也有感觉到，但是确实对于没做的事情很难给出合适的清单。啊！确实很make sense，有过许多次经历大喊我做不下去了，冷静之后思考分析觉得做不下去的原因是什么，针对这个原因下手反而很快就做到了。甚至产生一种只要大喊做不下去了就能做下去的玄学认知。更合理的解释应该是这个。</p></blockquote></li><li><p>针对预学习地图找到「简短」且「快速」的解答。对象：老师，书籍</p></li><li><p>百倍速前进，按任务清单去具体实践</p></li></ol><h4 id="具体实践（刻意练习四步法）"><a href="#具体实践（刻意练习四步法）" class="headerlink" title="具体实践（刻意练习四步法）"></a>具体实践（刻意练习四步法）</h4><blockquote><p>这个方法是不是只适合实践操作类的技能学习呢，如果是基础科学类的呢？适用范围？</p></blockquote><p>第一步：先学习程序性知识，「不明就理地学习基础常见的流程」，「可以跳过大多数内容，专注于做法，其余的不理会」</p><blockquote><p>或者说了解这个可以应用在什么场景？是不是对于基础学科可以看看作业题，再反过来听课？</p></blockquote><blockquote><p>人类喜欢「有确定性」的结果</p></blockquote><p>第二步：学完之后快速的练习几遍流程，并搞懂最关键的基础概念性知识，「当场作出成果后，回家短时间练三遍也复制成果三遍，针对不懂的地方去补充基础知识，在练过两三遍以2倍速度为目标的练习后，将目标放在一次快十倍」</p><p>第三步：重复练习，并以提高百倍速为目标调整当中的参数，学会要达到的境界：稳定输出，随时随地使出至少80分的效果</p><blockquote><p>這其實沒有什麼捷徑，靠的就是反覆重做。但這不代表是重複做一個無聊的動作，而是你必須要追求這次必須要比上次快兩倍的速度，或兩倍以上的效益、成果。</p><p>你可能會覺得沒事回家要練習好幾遍，有點懶。但這裡我可能告訴你一個數據，根據我與一些教師朋友的非正式統計: 100 個人大概學完一個技能，會回去練習一遍的大概只有 10 個人。會去練第二遍的大概只有 1 個。所以你練兩遍以上，大概就能快 4 倍且贏大概 99 個人了。</p><p>而且，以外行人純白紙的角度來看，如果你能比人快四倍且贏 99 個同學，你無疑就已經是個「高手」了。</p><p>現在這樣聽起來比較有動力吧！</p></blockquote><p>第四步：以十倍百倍速度为目标，去拆解流程并重组</p><h4 id="如何更高效快乐地学习：心流学习法"><a href="#如何更高效快乐地学习：心流学习法" class="headerlink" title="如何更高效快乐地学习：心流学习法"></a>如何更高效快乐地学习：心流学习法</h4><p>将游戏框架移植到学习上，但注意不是简单的PBL系统</p><h5 id="Step1-目的——史诗意义与使命感-epic-meaning-amp-calling"><a href="#Step1-目的——史诗意义与使命感-epic-meaning-amp-calling" class="headerlink" title="Step1: 目的——史诗意义与使命感 epic meaning &amp; calling"></a>Step1: 目的——史诗意义与使命感 epic meaning &amp; calling</h5><p>为自己立下一个很厉害的学习目标</p><h5 id="Step2-游戏玩法——routine"><a href="#Step2-游戏玩法——routine" class="headerlink" title="Step2: 游戏玩法——routine"></a>Step2: 游戏玩法——routine</h5><p>onboarding，拆解问题，掌握粗略流程</p><blockquote><p>说起来这回搭个人网站也是这样的呢，难怪会沉迷（x</p></blockquote><h5 id="Step3-第三步：第一个小胜利——ah-ha-moment"><a href="#Step3-第三步：第一个小胜利——ah-ha-moment" class="headerlink" title="Step3: 第三步：第一个小胜利——ah-ha moment"></a>Step3: 第三步：第一个小胜利——ah-ha moment</h5><p>做出第一个小目标</p><h5 id="Step4-第四步：技能进步——进步与成就感-development-amp-accomplishment"><a href="#Step4-第四步：技能进步——进步与成就感-development-amp-accomplishment" class="headerlink" title="Step4: 第四步：技能进步——进步与成就感 development &amp; accomplishment"></a>Step4: 第四步：技能进步——进步与成就感 development &amp; accomplishment</h5><p>做出第二个小目标，第三个，……，感受学习进度</p><h5 id="Step5-第五步-amp-第六步：角色养成-所有权与拥有感-ownership-amp-possession-｜-独特的宝箱奖章-稀缺性与渴望-scarcity-amp-impatience"><a href="#Step5-第五步-amp-第六步：角色养成-所有权与拥有感-ownership-amp-possession-｜-独特的宝箱奖章-稀缺性与渴望-scarcity-amp-impatience" class="headerlink" title="Step5: 第五步&amp;第六步：角色养成 所有权与拥有感 ownership &amp; possession ｜ 独特的宝箱奖章 稀缺性与渴望 scarcity &amp; impatience"></a>Step5: 第五步&amp;第六步：角色养成 所有权与拥有感 ownership &amp; possession ｜ 独特的宝箱奖章 稀缺性与渴望 scarcity &amp; impatience</h5><p>参加比赛，等等</p><p>作业进度，完成的作业，奖章，参赛作品</p><h5 id="第七步-amp-第八步：惊喜的关卡-未知性与好奇心-unpredictability-amp-curiosity-｜-体验社交分享-社交影响与关联性-social-influence-amp-relatedness"><a href="#第七步-amp-第八步：惊喜的关卡-未知性与好奇心-unpredictability-amp-curiosity-｜-体验社交分享-社交影响与关联性-social-influence-amp-relatedness" class="headerlink" title="第七步&amp;第八步：惊喜的关卡 未知性与好奇心 unpredictability &amp; curiosity ｜ 体验社交分享 社交影响与关联性 social influence &amp; relatedness"></a>第七步&amp;第八步：惊喜的关卡 未知性与好奇心 unpredictability &amp; curiosity ｜ 体验社交分享 社交影响与关联性 social influence &amp; relatedness</h5><p>将攻略与做法分享在网上</p><blockquote><p>因為當你公開作品，一定就會有人稱讚你。</p></blockquote><h4 id="保护措施"><a href="#保护措施" class="headerlink" title="保护措施"></a>保护措施</h4><blockquote><p>不仅知道应该怎么做，同时要了解不要怎么做，或者问题出现了该怎么办</p></blockquote><p>为什么一般人会失败</p><ul><li>门槛太高，能力不够：保持警惕，挑简单的，懂的学，看不懂就跳过，大师的书当字典查，参加大师开的新手班</li><li>动机不够：思考原因，没有动机是因为不需要，还是短期的动力刺激不够。去八角框架里面找一个可以产生强烈动力的元素，挂钩上去。</li></ul><p>自学的人，持续力是重点</p><p>停滞的原因：相同的本质，我是谁，我在哪，我等下要干嘛</p><blockquote><p>這幾點可以簡單濃縮為：</p><ol><li>我現在進度在哪裡（我不知道我能不能在未來5-10鐘內完成一份作業，複製老師的一套動作，我不知道接下來十分鐘我能得到什麼，我不知道一小時之後我能夠得到什麼）</li><li>我現在走的方向正確嗎（我不知道我是不是自己是不是走在正確的道路上，我不知道我的短期目標是什麼，我不知道我的長期目標是什麼）</li><li>還需要多久能完成我的瞬時目標、短期目標、長期目標。（還有多久才會走完，）</li></ol></blockquote><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>程序员工作：</p><ul><li>第一阶段：第一份工作，如何大量吸收经验，决定未来想要的方向，找到资源</li><li>第二阶段：锻炼写作能力，精进技巧</li><li>第三阶段：拼综合技能，管理能力，商业sense</li></ul><p>菜单学习法：</p><p>从家常菜练起，而不是看着高级的硬菜</p><ul><li>明白自己喜欢吃什么，自己微弱的能力能做到什么？【了解需求与能力】</li><li>找到自己常吃不腻马上吃饱的几样菜谱【粗略流程法】</li><li>不要管顺序模仿老师倒进去煮出来吃就好</li><li>做几次开始了解细节</li></ul><h4 id="如何自学一门学问"><a href="#如何自学一门学问" class="headerlink" title="如何自学一门学问"></a>如何自学一门学问</h4><p>第一步： 写下你对这个领域的好奇与困惑点（什么是？与为什么这很重要？）</p><p>第二步：找到最常出现的关键字或场景（者表示这是这门学问的关键骨干）</p><p>第三步：xx是什么？为何重要？如何做到？如何快10倍做到？</p><p>第四步：太难的主题先跳过</p><p>第五步：找到快10倍的做法</p><p>第六步：弄懂底层的原理</p><p>第七步：从别的行业改良移植现成的框架方法</p><blockquote><p>啊，这个是我自发干的事情</p></blockquote><p>自教的框架</p><blockquote><ol><li>寫下自己對這個領域所有的好奇與困惑點</li><li>Google 或買很多書，滿足這些好奇、疑惑。找到一直重複出現的重要關鍵詞與領域結構。</li><li>找到實做的方法（程序性知識）。</li><li>摸清楚底層原理（補充事實與概念性知識）。</li><li>重新設計出快10倍效率的方法與框架（後設認知調整自己的作法）。</li><li>反覆進行這個循</li></ol></blockquote><h3 id="如何学会编程语言"><a href="#如何学会编程语言" class="headerlink" title="如何学会编程语言"></a><strong>如何学会编程语言</strong></h3><p>编程的本质是「自动化」</p><blockquote><p>初學者就不知道自己的需求是什麼了。怎麼知道要選什麼？更糟的是，他學了老半天，才發現學了這門語言才發現沒辦法做出他想要的東西。（比如說學了 Python 結果造不出手機程式，倒是學了一堆爬蟲技術）</p></blockquote><p>啊哈哈哈哈哈哈哈哈救命笑死我</p><p>从学习自动化流程开始而不是语法</p><blockquote><p>資深程式設計師在實際上設計一套程式時，主要的原理，先是將問題先拆小，找到可以自動化的部分先完成，不能自動化的部分先用手動 Workround，再重新組裝。</p></blockquote><p>自动化的流程：输入，处理，输出 【流程化】</p><p>作为一个靠写程序谋生的，我迄今为止还没有完全真正地将自动化用在过我的生活里，感到了极度的惭愧</p><p>编程=问题分解+流程化+自动执行</p><blockquote><p>通常精通編程的人如我，遇到問題也並非一上來就寫程式。而是會想辦法把真正問題拆解出來，然後找到這條關鍵路徑上所有簡單粗暴可行的方法，先拼起來，輸出我要的結果。然後再逐一優化流程上每個節點，最終做到自動化。</p></blockquote><blockquote><p>他們心理上可以「無視 Error 帶來的心靈創傷」。</p></blockquote><blockquote><p>就連我在學習編程語言時，都會選擇近一兩年的教材且有複製貼上範例的教材。</p></blockquote><blockquote><p>所謂的底層相通，指的是</p><ol><li>method 的構建流程 (method 指的是我們會將一連串代碼，包裝成一段可以呼叫的代碼塊，這樣遇到類似功能，就不用重新複製一排，直接呼叫就可以了。)</li><li>if / else （遇到什麼狀況、就執行什麼結果）</li><li>for 迴圈（重複執行一段程式碼幾次）</li></ol></blockquote><p>蘋果在 iPad 上出的一套編程遊戲，叫 Learn to Code</p><p>每一门语言都有一个主流程，以及构成主流程相关的大关键字</p><blockquote><p>ruby 是 CRUD</p><p>ios 是 screen + API</p></blockquote><p>那么C C++ python呢？</p><blockquote><p>要學會「編程語言」，重點不是去背術語。而是</p><ol><li>解構你要解決的問題，找到能夠解決這門的適用工具</li><li>如果找不到適用工具，才考慮去找適用的工具語言</li><li>先不要急著按書上面或教材上的練，可以先觀察一下整套語言的「流程」與「關鍵字」</li><li>找到幾套教材，能夠讓你練習最基礎的流程套路。把這一套小流程練個兩三遍，你可以用非常拙劣但不會「卡住」的方法，拼接出你要的結果。</li><li>隨著你的程式不斷的練習改版，你的學習成果自然就會有快速的進步，進入超級正迴圈</li></ol></blockquote><p>怎么有点讲到自己的专业知识射程范围内有点货不对版的感觉呢？还是说因为我是从高级新手到胜任者，所以这个方法已经不适用了？这个更像是从 新手到高级新手。</p><h3 id="如何学会外国语言"><a href="#如何学会外国语言" class="headerlink" title="如何学会外国语言"></a><strong>如何学会外国语言</strong></h3><blockquote><p>過程難學、結果通靈。基本上就是「目標」與「結構」錯置。</p></blockquote><p>语言的本质是「沟通」</p><blockquote><p>但你知道一個恐怖的事情嗎：</p><p>我們從一百多年前至今到現在的第二語言教學法，本質上不是為了教「溝通」，而是為了教「翻譯」。</p></blockquote><p><a href="https://github.com/xdite/learn-hack/blob/master/images/20211024113813.png"><img src="fig/20211024113813.png" alt="img"></a></p><p><a href="https://github.com/xdite/learn-hack/blob/master/images/20211024113824.png"><img src="fig/20211024113824.png" alt="img"></a></p><p>第一步：改变学习目标与对流程的认识</p><ul><li>从听说开始学，而非读写</li><li>从句子开始学，而非单词，文法，音标</li></ul><p>第二步：用练一般技能的方法练英语</p><blockquote><p>這裡只有一個關鍵點，你得買那些能夠說多國語言的語言「天才」的書來看。</p><p>推荐四本书</p></blockquote><p>龙飞虎《6个月学会任何一种外语》</p><blockquote><ul><li>第一周：大量聽＋掌握開口說話工具箱</li><li>第二周：聽得清晰＋自己能用一些詞溝通</li><li>第三周：大膽組合，大量去用</li><li>第四周：70個膠水詞就是英語說話的邏輯</li><li>第五、第六周：把功夫下在解決85%的日常英語溝通</li><li>第七、第八周：認識英語詞粒子，自然掌握英語語法75%最重要的規律</li><li>第三個月：開始用英語閱讀和寫作</li><li>第四個月：融入英語文化</li><li>第五個月：擴大使用英語的范圍，吸收反饋</li><li>第六個月：把第一個作品的每一塊吃透</li></ul></blockquote><p>作者认为是科学的，代入认知模型</p><blockquote><ul><li>Step 1: 大量英聽，聽懂別人的句子。複製學習大量句子。辨認溝通的上下文。(程序性知識)</li><li>Step 2: 補充單詞，場景句（事實性知識）</li><li>Step 3: 掌握文法，時態（概念性知識）</li><li>Step 4: 開始能讀文物，修正自己的英文表達能力（後設認知）</li></ul></blockquote><p>后设认知和元认知知识是一种东西吗？</p><p>第三步：对自己有耐心</p><p>學「會」一門語言，不是遙遙無期，而是最多12-18 個月（高級新手）而已。這也是那些多國語言天才學語言大概共同的時程與進度。</p><p>第四步：用本书的方法客制化自己的自学语言体验</p><blockquote><p>STEP 1: 定義你的短期學習目標（可以是餐廳場景、或者是閱讀技術期刊場景） STEP 2: 寫下你的現狀與想要到達的目標當中的差距、抱怨、煩惱 STEP 3: 挖出你真正需要的關鍵字、關鍵問題、關鍵方法、關鍵流程 STEP 4: 大量買書，找到流程。 STEP 5: 建構出你所需要的語句庫，找到能夠正確發音或能夠給予正確反餽的老師、或教材。他聽你說，多練幾遍。 STEP 6: 抽換句子裡面的單詞，練熟句子與上下文。從小套路練到大套路</p></blockquote><h2 id="三轮读书法"><a href="#三轮读书法" class="headerlink" title="三轮读书法"></a>三轮读书法</h2><blockquote><p>读一遍的时候我在想通过大量书籍来学习一个技能这种模式我并不是频频使用，这个使用频率是不是太低了。然后我突然意识到把工具书替换成paper等等，这不就是我每天的日常吗？这个三轮读书法其实也可以挪用为科研阅读方法使用。</p></blockquote><p>方法适用范围：通过阅读从「新手」到「高级新手」</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="主动阅读"><a href="#主动阅读" class="headerlink" title="主动阅读"></a>主动阅读</h4><ol><li>我是对的，而不是书</li><li>带着问题读</li><li>不好看就扔了，只看好看的</li><li>越看越起劲</li></ol><h4 id="极速读书法"><a href="#极速读书法" class="headerlink" title="极速读书法"></a>极速读书法</h4><ol><li><p>事先列出自己想在这本书得到的问题解答，作为目标</p></li><li><p>阅读时只专注于找到解答，其他不相关的可以直接略过</p></li><li><p>专注只在笔记写下有效的16个解答</p><blockquote><p>啊！16格笔记法吗</p></blockquote></li><li><p>在读完后立刻整理成三个重点，并讲给朋友听，加强自己的长期记忆</p></li></ol><h3 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>建立自动化流程</p><ul><li>Notion </li><li>幕布</li><li>Dropbox</li><li>Zappier「无代码接入平台，有空可了解」</li></ul><blockquote><p>如何增加zotero</p></blockquote><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><h5 id="第一轮-粗筛"><a href="#第一轮-粗筛" class="headerlink" title="第一轮 粗筛"></a>第一轮 粗筛</h5><ul><li><p>大规模挑选材料，看目录，看10-20页，找感觉「关键词，模糊原则，方法流程」，不用细看，不用做笔记，留几句话就行</p><blockquote><p>和我的对比学习法有相同的底层逻辑，但我没有这么大规模</p></blockquote></li><li><p>notion 阅读清单，表格头为：书名｜tags｜简介（一两句话表达翻过这本书的感觉）｜整理状态（todo，精读，略读）<a href="https://rebel-cyclamen-f02.notion.site/e126f47b63ed465d9bd35c85eb49f25b?v=b838e41de68640d2821bfea4e007f691">Notion模版</a></p></li><li><p>A4笔记本作为索引笔记，进行粗读的时候记录，记录内容为时间，金句，感想感觉</p><blockquote><p>纸质笔记本有点太那啥了，干脆全电子化，就建一个markdown文本记录呗</p></blockquote></li></ul><h5 id="第二轮-精筛"><a href="#第二轮-精筛" class="headerlink" title="第二轮 精筛"></a>第二轮 精筛</h5><ul><li><p>看第一轮筛完的内容，找金句「反直觉」，概念，摘录重要段落</p></li><li><p>边读边使用幕布直接复制粘贴「能用电子就电子记录」</p><blockquote><p>直接用markdown呢？要不还是幕布试试？</p></blockquote></li><li><p>读后对摘录内容进行重排整理「将记录与整理分开」</p></li><li><p>可以很乱，可以扔掉没用的，要二次整理「3天内」，三次整理「7天内」</p></li><li><p>整理写下自己的综合想法「知道知识」</p></li></ul><h5 id="第三轮-输出"><a href="#第三轮-输出" class="headerlink" title="第三轮 输出"></a>第三轮 输出</h5><ul><li><p>小便：社交输出，边读边进行</p></li><li><p>大便：</p><ul><li><p>找出正确流程，组出自己可以做的流程，拼起来玩看看，至少练习1-2回「学会技能」</p></li><li><p>ppt/A3大笔记</p><blockquote><p>对我来说是不是可以改成博客？</p></blockquote></li></ul></li></ul><h4 id="时间安排"><a href="#时间安排" class="headerlink" title="时间安排"></a>时间安排</h4><ul><li><p>粗筛&amp;精筛：周末</p></li><li><p>阅读：每天有空</p></li><li><p>小便：随时</p></li><li><p>大便：定期</p><blockquote><p>一周，半个月，一个月？</p><p>每周更新 hexo d 一次博客</p></blockquote></li></ul><h2 id="上课之道"><a href="#上课之道" class="headerlink" title="上课之道"></a>上课之道</h2><p>方法适用范围：正式课程，研讨会，讲座</p><h3 id="Step1-分辨你学习的对象是老师，前辈还是高级新手"><a href="#Step1-分辨你学习的对象是老师，前辈还是高级新手" class="headerlink" title="Step1: 分辨你学习的对象是老师，前辈还是高级新手"></a>Step1: 分辨你学习的对象是老师，前辈还是高级新手</h3><p>类比于粗筛/精筛图书</p><p><u>至少选择能够1对多教方法的人</u></p><blockquote><p>我們可以把比你厲害的人分為幾種等級：</p><ul><li>LV 1 只是比你經驗還多的人</li><li>LV 2 有自己獨特做事方法的人</li><li>LV 3 能夠 1 對 1 教人做事方法的人</li><li>LV 4 能夠 1 對 多教方法的人</li><li>Lv 5 能夠 1 對多，還能學成率超高的人</li><li>LV 6 精通領域技術也精通教學方法的人</li></ul><p>1～3是前辈，4～6是老师</p></blockquote><h3 id="Step2-跟正确的老师学套路「程序性知识」"><a href="#Step2-跟正确的老师学套路「程序性知识」" class="headerlink" title="Step2: 跟正确的老师学套路「程序性知识」"></a>Step2: 跟正确的老师学套路「程序性知识」</h3><ul><li><p>秘诀1：带着问题去听课。如果老师上课的前十分钟感到枯燥就可以拿出问题列表清单来主动学习，不用管老师想上什么。</p><blockquote><p>如果是网课呢？退出？还是当作背景音？</p></blockquote></li><li><p>秘诀2：提高回本率</p><ul><li>研讨会的参与方式</li><li>带着问题去听，听到重点记下来，看ppt</li><li>ppt上没有想知道的问题，结束后找讲者攀谈</li><li>有时候只参加workshop</li><li>多交朋友，有相同的兴趣，卧虎藏龙</li></ul></li><li><p>秘诀3：将talk转为文字稿，将上课内容文字化</p></li></ul><h3 id="Step3-跟着套路练三遍"><a href="#Step3-跟着套路练三遍" class="headerlink" title="Step3: 跟着套路练三遍"></a>Step3: 跟着套路练三遍</h3><ul><li><p>秘诀1：下课马上练</p></li><li><p>秘诀2：用身体学习，不要用脑袋学习</p></li><li><p>秘诀3：回家照葫芦画瓢做两遍，第三遍再根据自己喜好修改「重新创作，多用几遍」</p><blockquote><p>啊秘诀3击中我了，确实有一些还没重复就想修改的时候</p></blockquote></li><li><p>秘诀4：随手记笔记，并公开发表</p><ul><li><p>课程中场休息时整理笔记，当天结束前转述</p></li><li><p>将找到的资源，存储在外部空间</p><blockquote><p>深有同感，试过typora+github私人仓库，notion等等，发现最大的问题是写下的笔记难以查找翻阅，导致动力不足，管理混乱，所以这回以博客作为公开的中心点，引入观众（虽然不知道这个博客什么时候会迎来第一个读者）</p></blockquote></li></ul></li></ul><h2 id="ORID模式"><a href="#ORID模式" class="headerlink" title="ORID模式"></a>ORID模式</h2><h3 id="1-O-“Objective”：观察外在客观事实。了解客观事实的问句如下："><a href="#1-O-“Objective”：观察外在客观事实。了解客观事实的问句如下：" class="headerlink" title="1. O-“Objective”：观察外在客观事实。了解客观事实的问句如下："></a>1. O-“Objective”：观察外在客观事实。了解客观事实的问句如下：</h3><ul><li>看到什么？</li><li>记得什么？</li><li>发生什么？</li></ul><h3 id="2-R-“Reflective”：重視內在感受、反應。喚起情緒與感受的問句如下："><a href="#2-R-“Reflective”：重視內在感受、反應。喚起情緒與感受的問句如下：" class="headerlink" title="2. R-“Reflective”：重視內在感受、反應。喚起情緒與感受的問句如下："></a>2. R-“Reflective”：重視內在感受、反應。喚起情緒與感受的問句如下：</h3><ul><li>有什麼地方讓你很感動/驚訝/難過/開心？</li><li>什麼是你覺得比較困難/容易/處理的？</li><li>令你覺得印象深刻的地方？</li></ul><h3 id="3-I-“Interpretive”：詮釋意義、價值、經驗。尋找前述意義與價值的問句如下："><a href="#3-I-“Interpretive”：詮釋意義、價值、經驗。尋找前述意義與價值的問句如下：" class="headerlink" title="3.　I-“Interpretive”：詮釋意義、價值、經驗。尋找前述意義與價值的問句如下："></a>3.　I-“Interpretive”：詮釋意義、價值、經驗。尋找前述意義與價值的問句如下：</h3><ul><li>為什麼這些讓你很感動/驚訝/難過/開心？</li><li>引發你想到了什麼？有什麼重要的領悟嗎？</li><li>對你而言，重要的意義是什麼？學到了什麼？</li></ul><h3 id="4-D-“Decisional”：找出決定、行動。找出決議和行動的問句如下："><a href="#4-D-“Decisional”：找出決定、行動。找出決議和行動的問句如下：" class="headerlink" title="4.　D-“Decisional”：找出決定、行動。找出決議和行動的問句如下："></a>4.　D-“Decisional”：找出決定、行動。找出決議和行動的問句如下：</h3><ul><li>有什麼我們可以改變的地方？</li><li>接下來的行動/計劃會是什麼？</li><li>還需要什麼資源或支持才能完成目標？</li><li>未來你要如何應用？</li></ul><h2 id="我的想法"><a href="#我的想法" class="headerlink" title="我的想法"></a>我的想法</h2><ul><li>是不是机械论总是会吸引相信科学的人类 隔段时间总会包装一下重新现身</li><li>台湾管薛定谔叫薛丁格呀</li><li>如何区分好随书评论的格式与摘抄的格式</li><li>台湾受美日影响好大啊，或者说相比于大陆更容易接受到一线资讯？文化软实力的影响的体现，美国是最时髦的思想的来源，而日本人好像就很喜欢研究学习方法论这样。</li><li>写文章的初稿时，图片是用纸+中性笔荧光笔啥的手绘，也挺好的</li></ul><p>拆分为零散想法与基于内容的想法，基于内容的想法依附内容，零散想法发到社交媒体</p><ul><li>又想到我感觉到惶恐的原因是我好像越来越少听到命运对我的召唤calling</li></ul><h2 id="提及的其他书与人"><a href="#提及的其他书与人" class="headerlink" title="提及的其他书与人"></a>提及的其他书与人</h2><ul><li>大谷翔平的曼陀罗计划表，8个方向，64个可行的实作方法</li></ul><blockquote><p>當然，大谷翔平的這 64 格看起來很厲害。我想，當你第一次拆自己的目標時，未必一次就能到位。但我也相信這張表，也不是第一次他就做出來的版本。而是經過幾年時間，不斷的修改、調整而成。</p></blockquote><ul><li><p>铃木一朗 P计划，写下为达成目标该做的练习or事情，D执行，列出练习KPI，C检查，自我评估上述做法成效，A行动，确定有效后形成SOP</p></li><li><p>《刻意练习》 看完觉得很有道理，但不知道怎么做就干脆算了……原因是这本书讲的都是结果</p></li><li><p>丹尼尔康纳曼《快思慢想》系统1与系统2理论</p><p>系统1:反射性直觉思考</p><p>系统2:按部就班的理性思考</p></li><li><p>米哈里‧奇克森特米海伊（Mihaly Csikszentmihalyi），《心流：高手都在研究的最优体验心理学》</p><blockquote><p>进入心流的五个要素：明确目标，及时回馈，难度匹配（前三个是为了维持平稳的固定行为），全神贯注（参与者心理状态），持续挑战（循环的结果）</p><blockquote><p>关于难度匹配这个我也有意识到，发现自己觉得学不下去委屈的时候都是因为超越了自己的能力范围，中间存在gap，可我却不知道该如何填补这个gap</p></blockquote><p>xdite 认为这只是表征要素，不是进入心流真正的流程</p></blockquote></li><li><p>周郁凯《 Actionable Gaminification 》：人类动力框架「八角理论」</p></li></ul><h2 id="待处理部分"><a href="#待处理部分" class="headerlink" title="待处理部分"></a>待处理部分</h2><p><a href="https://github.com/xdite/learn-hack/blob/master/images/20211023162925.png"><img src="fig/20211023162925.png" alt="img"></a></p><p>上面：白帽区，使人感到强大，圆满，满意的动机元素，短期无感，长久满足</p><p>下面：黑帽区，使人感到着迷，焦虑，上瘾的元素，短期比较强大，长期无感</p><p>左边：外在动机，与周遭比较</p><p>右边：内在动机，发自内心的驱动力</p><blockquote><p>不是很明白这个分区与解释</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>阅读笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>元学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>写字101</title>
    <link href="/2022/03/08/%E5%86%99%E5%AD%97101/"/>
    <url>/2022/03/08/%E5%86%99%E5%AD%97101/</url>
    
    <content type="html"><![CDATA[<h3 id="练字四部曲"><a href="#练字四部曲" class="headerlink" title="练字四部曲"></a>练字四部曲</h3><p>读 红笔 结构 穿插避让 不要带起笔开写 </p><p>摹 </p><p>临 模仿笔画和结构，每写一个用红笔标记，再进行下一个</p><p>背 </p><p>自备练字帖 米回格</p><h3 id="坐姿"><a href="#坐姿" class="headerlink" title="坐姿"></a>坐姿</h3><p>头正 肩平 腰直 足安</p><h3 id="握笔姿势"><a href="#握笔姿势" class="headerlink" title="握笔姿势"></a>握笔姿势</h3><p>拇指，食指，不贴，两个九十度</p><p>笔杆在食指根部，不在虎口</p><p>掌空</p><p>手指不动，手腕动</p><h3 id="纸笔"><a href="#纸笔" class="headerlink" title="纸笔"></a>纸笔</h3><p>0.7 子弹头 中性笔</p><p>1.5 mm 散页</p><p>练字垫</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>手抖，纠正握笔姿势，两到三周适应，控笔字帖</p><p>写不出笔锋 正常，控笔能力，软笔概念，坚持练习</p><p>没有效果 凹槽❌ 描红❌ 积累不够❌</p><p>临得不像 正常 控笔能力不够 眼到手到心到 三周学习</p><p>坚持半年到一年 从字帖过度到日常</p><p>一个月：临帖</p><p>三个月：90%的字帖</p><h3 id="练习时长"><a href="#练习时长" class="headerlink" title="练习时长"></a>练习时长</h3><p>一小时左右，一次一页纸，没空就半小时</p><h3 id="窍门"><a href="#窍门" class="headerlink" title="窍门"></a>窍门</h3><p>结构&gt;笔画</p><p>左小右大 </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>wandb使用记录</title>
    <link href="/2022/03/07/wandb%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/03/07/wandb%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><code>pip install wandb</code></p><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>wandb.ai 登陆  <a href="https://wandb.ai/site">https://wandb.ai/site</a></p><p>点击头像 setting</p><p>生成并拷贝 API keys</p><p><code>wandb login</code></p>]]></content>
    
    
    <categories>
      
      <category>炼丹炉</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>einops包使用记录</title>
    <link href="/2022/03/07/einops%E5%8C%85%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <url>/2022/03/07/einops%E5%8C%85%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><code>pip install einops</code></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>效率工具方法</title>
    <link href="/2022/03/07/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/"/>
    <url>/2022/03/07/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="ORID"><a href="#ORID" class="headerlink" title="ORID"></a>ORID</h3><p>O：O是object客观事实，R是reflection反应感受，I是灵感启发inspiration，D是decisional决策行动</p><p>R：感觉很有用</p><p>I：这是一个进行复盘的方法论</p><p>D：</p><ul><li><input disabled="" type="checkbox"> 用在每天复盘，阅读，学习复盘，磨合坚持21天</li><li><input disabled="" type="checkbox"> 阅读<a href="https://github.com/xdite/learn-hack">《打造超人学习》</a></li></ul><h3 id="设定极限目标"><a href="#设定极限目标" class="headerlink" title="设定极限目标"></a>设定极限目标</h3><p>O：设定一个极限目标（追求10倍效率），寻找降维打击的方法和手段</p><p>R：感到犹豫与不确定，这样如何避免为了快速高效而导致根基不牢的情况？</p><p>I：这个原理感觉和拖延到DDL前才开始动工完成的愧疚学习法有诸多相似之处，但一个是主动，一个是被动。</p><p>D：</p><ul><li><input disabled="" type="checkbox"> 放入待定观察区</li></ul><h3 id="300个小时-1500元成为一个领域的高级新手"><a href="#300个小时-1500元成为一个领域的高级新手" class="headerlink" title="300个小时+1500元成为一个领域的高级新手"></a>300个小时+1500元成为一个领域的高级新手</h3><p>O：</p><p>R：</p><p>I：</p><p>D：</p><ul><li><input disabled="" type="checkbox"> 整理我想要进入的领域以及花费的成本</li></ul><h3 id="给买的书打标签并添加TODO"><a href="#给买的书打标签并添加TODO" class="headerlink" title="给买的书打标签并添加TODO"></a>给买的书打标签并添加TODO</h3><p>O：</p><p>R：</p><p>I：</p><p>D：</p><h3 id="将第一遍读过的书的金句加入幕布，金句是反直觉的句子"><a href="#将第一遍读过的书的金句加入幕布，金句是反直觉的句子" class="headerlink" title="将第一遍读过的书的金句加入幕布，金句是反直觉的句子"></a>将第一遍读过的书的金句加入幕布，金句是反直觉的句子</h3><p>O：将反直觉的金句加入幕布，金句是书的营养素，重要的东西。通常意义上的金句：符合直觉只不过作者用更精炼或华丽的文字描述出来的并不是真的金句。</p><p>R：这本身对我来说是一个反直觉的思想，以及幕布的使用者地理分布这么广呀</p><p>I：我认为读书一方面是了解反直觉的内容以纠正或者拓宽认知，另一方面也需要寻找认同感以缓解孤独。</p><p>D：</p><ul><li><input disabled="" type="checkbox"> 读书摘抄时将内容分为 反直觉 与 直觉 两类</li></ul><h3 id="区分什么样的人才是真正大师"><a href="#区分什么样的人才是真正大师" class="headerlink" title="区分什么样的人才是真正大师"></a>区分什么样的人才是真正大师</h3><p>O：</p><p>R：</p><p>I：</p><p>D：</p><h3 id="在平台公开发表笔记，用大家听得懂的方式讲解在semina学习到的东西"><a href="#在平台公开发表笔记，用大家听得懂的方式讲解在semina学习到的东西" class="headerlink" title="在平台公开发表笔记，用大家听得懂的方式讲解在semina学习到的东西"></a>在平台公开发表笔记，用大家听得懂的方式讲解在semina学习到的东西</h3><p>O：将输入的知识转化为输出</p><p>R：认同，但直播有点抗拒</p><p>I：发现很难区分R和I</p><p>D：</p><ul><li><input disabled="" type="checkbox"> 继续更新个人博客</li><li><input disabled="" type="checkbox"> 找到合适时机开始开口讲分享</li></ul>]]></content>
    
    
    <categories>
      
      <category>元学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>mac使用便利贴</title>
    <link href="/2022/03/07/mac%E4%BD%BF%E7%94%A8%E4%BE%BF%E5%88%A9%E8%B4%B4/"/>
    <url>/2022/03/07/mac%E4%BD%BF%E7%94%A8%E4%BE%BF%E5%88%A9%E8%B4%B4/</url>
    
    <content type="html"><![CDATA[<h3 id="safari使用开发者工具"><a href="#safari使用开发者工具" class="headerlink" title="safari使用开发者工具"></a>safari使用开发者工具</h3><p>菜单栏 safari浏览器&gt;偏好设置&gt;高级&gt;在菜单栏显示开发菜单</p><p>开启快捷键：<code>option+cmd+I</code></p><h3 id="Safari-保存PDF"><a href="#Safari-保存PDF" class="headerlink" title="Safari 保存PDF"></a>Safari 保存PDF</h3><p>菜单栏 文件&gt;存储</p>]]></content>
    
    
    <categories>
      
      <category>MaxOS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>4.博客搭建指南之知识收集</title>
    <link href="/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E7%9F%A5%E8%AF%86%E6%94%B6%E9%9B%86/"/>
    <url>/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E7%9F%A5%E8%AF%86%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h3 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h3><p>懒加载又称延迟加载。开启后，当图片或评论插件滚动到可见范围内才会加载，可以大幅提高打开网页的速度。</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建指南</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>3.博客搭建指南之fluid主题</title>
    <link href="/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Bfluid%E4%B8%BB%E9%A2%98/"/>
    <url>/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Bfluid%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>在好几个主题里看了下，考虑了加速性能和好看程度选择了这个</p><p>下面就是安装记录啦</p><blockquote><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">Github仓库</a></p><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">配置指南</a></p></blockquote><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><ol><li><p>在博客目录执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">npm install --save hex-theme-fluid<br></code></pre></td></tr></table></figure><p>通过 npm 安装的话 <code>～/themes/</code> 下不会有新文件产生。还有另一种安装方法是下载 release 版本代码，未尝试。</p></li><li><p>在博客目录下创建<code>/_config.fluid.yml</code>，将github仓库中<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制进去。</p></li><li><p>在 <code>~/_config.yml</code> 中的主题修改了fluid</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></table></figure></li><li><p>创建「关于页」</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure></li></ol><h2 id="涉及配置文件"><a href="#涉及配置文件" class="headerlink" title="涉及配置文件"></a>涉及配置文件</h2><ol><li>“<strong>博客配置</strong>“ 指的 Hexo 博客目录下的 <code>_config.yml</code>，”<strong>主题配置</strong>“ 指的是  <code>_config.fluid.yml</code></li><li>每次无论 <code>hexo g</code> 或 <code>hexo s</code>，都最好先使用 <code>hexo clean</code> 清除本地缓存</li></ol><h2 id="个性化功能"><a href="#个性化功能" class="headerlink" title="个性化功能"></a>个性化功能</h2><h3 id="我想要统计网站访问信息"><a href="#我想要统计网站访问信息" class="headerlink" title="我想要统计网站访问信息"></a>我想要统计网站访问信息</h3><p>Fluid 主题支持百度，谷歌，谷歌gtag，腾讯，51，友盟，LeanCloud计数统计</p><p>好像 LeanCloud 的推荐度很高，但我选择了度度</p><p>操作步骤：</p><ol><li><p>在<a href="https://tongji.baidu.com/web/homepage/index">百度统计平台</a>使用百度账号开通统计功能</p></li><li><p>管理&gt;网站列表&gt;自由网站&gt;新增网站</p></li><li><p>网站域名和网站首页填写  <code>username.github.io</code>  </p></li><li><p>增加完毕后，在 <code>获取代码</code> 中复制 <code>hm.js?</code> 后面的字符串到主题配置文件中的对应位置，生成部署博客，到这步就完成啦</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>可以回到统计平台页面确认一下，<code>代码安装检查</code> 一开始会显示未检测，需要等待一段时间，我大概等了七八分钟的样子。</p></li></ol><h3 id="我想要显示每篇文章阅读量"><a href="#我想要显示每篇文章阅读量" class="headerlink" title="我想要显示每篇文章阅读量"></a>我想要显示每篇文章阅读量</h3><p>每篇文章阅读量or网页访问量的专业名词好像是==PV/UV统计==，PV 是 page view，页面访问一次记录一次，UV 是 unique view，根据 IP 地址来统计，PV 会大于等于 UV。一开始我还以为网站访问统计就是这个还疑惑了一会，上一节配置的统计信息只能后台查看🤦‍♀️</p><p>Fluid 主题支持不蒜子和 LeanClound，我选择了不蒜子。不蒜子不需要注册啥的，开启十分简单，在主题配置文件中修改对应位置即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">statistics:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;busuanzi&quot;</span><br>    <br><span class="hljs-attr">post:</span><br><span class="hljs-attr">views:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">source:</span> <span class="hljs-string">&quot;busuanzi&quot;</span><br></code></pre></td></tr></table></figure><p>补充一点是，不蒜子在本地预览的时候统计信息并不准确，不用管，部署到服务器就正常啦。</p><h3 id="我想要每篇文章有评论区"><a href="#我想要每篇文章有评论区" class="headerlink" title="我想要每篇文章有评论区"></a>我想要每篇文章有评论区</h3><p>Fluid 主题支持的评论插件有 utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis，考虑到学习成本就先使用基于 github issue 的 gitalk 插件。</p><p>操作步骤：</p><ol><li><p>打开<a href="https://github.com/settings/applications/new">这里</a>注册一个 OAuth App</p></li><li><p>Homepage URL &amp; Authorization callback URL 填写 <code>https://username.github.io</code> ，不能只写 <code>username.github.io</code>，否则会提示错误URL（这和度度网站统计填写信息还不同）</p><blockquote><p>⚠️注意：是 <code>https</code>，不要漏掉s，否则验证的时候会重定向回主页，无法正确初始化</p></blockquote></li><li><p>在注册好的 App 页面生成一个 client secret</p></li><li><p>在主题配置文件中修改对应位置，将第3步得到的的 clientID 和 clientSecret 粘贴进去</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">comments:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">gitalk</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">gitalk:</span><br>  <span class="hljs-attr">clientID:</span><br>  <span class="hljs-attr">clientSecret:</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">mushroomchan.github.io</span><br>  <span class="hljs-attr">owner:</span> <span class="hljs-string">mushroomchan</span><br></code></pre></td></tr></table></figure></li><li><p>第一次打开文章页面时，需要登陆 github 账号初始化创建评论框。</p></li></ol><p>TODO：批量自动化创建评论框</p><h3 id="我想要在主页中指定文章摘要内容"><a href="#我想要在主页中指定文章摘要内容" class="headerlink" title="我想要在主页中指定文章摘要内容"></a>我想要在主页中指定文章摘要内容</h3><p>Fluid 主题会优先显示文章中的  <code>excerpt</code> 字段 作为摘要</p><p>在 <code>～/scaffolds/post.md</code> 中添加该字段作为文章模板</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#x27;&#x27;&#x27;<br>excerpt: <br>&#x27;&#x27;&#x27;<br></code></pre></td></tr></table></figure><h3 id="我想要在分类中给文章按标题排序显示"><a href="#我想要在分类中给文章按标题排序显示" class="headerlink" title="我想要在分类中给文章按标题排序显示"></a>我想要在分类中给文章按标题排序显示</h3><p>Fluid 主题默认是按发布时间来给分类中的文章排序，现修改为按标题排序</p><p>在主题配置文件中找到对应字段并修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">category:</span><br><span class="hljs-attr">post_order_by:</span> <span class="hljs-string">&quot;title&quot;</span><br></code></pre></td></tr></table></figure><h3 id="我想自定义标签栏符号"><a href="#我想自定义标签栏符号" class="headerlink" title="我想自定义标签栏符号"></a>我想自定义标签栏符号</h3><p>Fluid 主题自带的标签页显示是 Fluid 的 icon，想要替换掉</p><p>在主题配置文件中找到</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 用于浏览器标签的图标</span><br><span class="hljs-comment"># Icon for browser tab</span><br><span class="hljs-attr">favicon:</span> <span class="hljs-string">/img/favicon.png</span><br><br><span class="hljs-comment"># 用于苹果设备的图标</span><br><span class="hljs-comment"># Icon for Apple touch</span><br><span class="hljs-attr">apple_touch_icon:</span> <span class="hljs-string">/img/favicon.png</span><br></code></pre></td></tr></table></figure><p>很神奇，favicon 有些文章页面的没更新，我猜测是没有更新导致没有重新生成？</p><p>TODO：给自己画一个favicon</p><h3 id="我想要修改文章URL"><a href="#我想要修改文章URL" class="headerlink" title="我想要修改文章URL"></a>我想要修改文章URL</h3><p>现在是按时间+名字，好像有点蠢</p><p>有点想换成 分类+名字，思考观察下要不要这样改</p><h2 id="相关问题与解决"><a href="#相关问题与解决" class="headerlink" title="相关问题与解决"></a>相关问题与解决</h2><p>这个整理挪去 <a href="/2022/03/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Btroubleshooting/" title="Troubleshooting">Troubleshooting</a> </p>]]></content>
    
    
    <categories>
      
      <category>博客搭建指南</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>5.博客搭建指南之troubleshooting</title>
    <link href="/2022/03/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Btroubleshooting/"/>
    <url>/2022/03/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Btroubleshooting/</url>
    
    <content type="html"><![CDATA[<h3 id="Q1-正常添加的博文无法显示"><a href="#Q1-正常添加的博文无法显示" class="headerlink" title="Q1 正常添加的博文无法显示"></a>Q1 正常添加的博文无法显示</h3><p>现象：新博文没有出现</p><p>原因：_config.yml文件的timezone写得不对</p><p>解决：去掉了</p><h3 id="Q2-hexo-d-无法推送"><a href="#Q2-hexo-d-无法推送" class="headerlink" title="Q2 hexo d 无法推送"></a>Q2 hexo d 无法推送</h3><p>现象：hexo d 后报错信息为<code>FATAL &#123; err: Error: Spawn failed ... &#125;</code></p><p>原因：github 连接有问题</p><p>解决：把hosts文件中github的加速DNS注释了</p><h3 id="Q3-gitalk插件初始化认证会跳转到主页"><a href="#Q3-gitalk插件初始化认证会跳转到主页" class="headerlink" title="Q3 gitalk插件初始化认证会跳转到主页"></a>Q3 gitalk插件初始化认证会跳转到主页</h3><p>现象：使用gitalk作为评论模块，首次验证时点击登陆会跳转到主页，无法进行初始化</p><p>原因：在 github OAuth 申请时填写的 URL 填写不正确引起，如将 <code>https</code> 写成 <code>http</code></p><p>解决：在 <a href="https://github.com/settings/developers">https://github.com/settings/developers</a> 找到对应的App，更正URL</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建指南</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>linux便利贴</title>
    <link href="/2022/03/06/linux%E4%BE%BF%E5%88%A9%E8%B4%B4/"/>
    <url>/2022/03/06/linux%E4%BE%BF%E5%88%A9%E8%B4%B4/</url>
    
    <content type="html"><![CDATA[<h3 id="教练，我想要关机"><a href="#教练，我想要关机" class="headerlink" title="教练，我想要关机"></a>教练，我想要关机</h3><p>shutdown 派</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">shutdown -h now  <span class="hljs-comment"># 关机后停机，一种说法是系统关掉但主板不掉电</span><br>shutdown -r now  <span class="hljs-comment"># 关机后重新开机</span><br></code></pre></td></tr></table></figure><p>init 派</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo init 0  <span class="hljs-comment"># 关机</span><br>sudo init 6  <span class="hljs-comment"># 重启</span><br></code></pre></td></tr></table></figure><p><a href="https://www.runoob.com/linux/linux-comm-shutdown.html">更多参考</a></p><h3 id="教练，我要管理进程"><a href="#教练，我要管理进程" class="headerlink" title="教练，我要管理进程"></a>教练，我要管理进程</h3><p>查看运行的进程，获得pid</p><p><code>ps -ef | grep &quot;进程名字关键词&quot;</code></p><p>关闭进程</p><p><code>kill -9 “pid number”</code></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>6.博客搭建指南之来日方长</title>
    <link href="/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%9D%A5%E6%97%A5%E6%96%B9%E9%95%BF/"/>
    <url>/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%9D%A5%E6%97%A5%E6%96%B9%E9%95%BF/</url>
    
    <content type="html"><![CDATA[<p>不着急不焦虑 记录下进一寸有进一寸的欢喜</p><h2 id="形式"><a href="#形式" class="headerlink" title="形式"></a>形式</h2><ul><li><input checked="" disabled="" type="checkbox"> 更换主题</li><li><input disabled="" type="checkbox"> 文章URL修改</li><li><input disabled="" type="checkbox"> 二级导航菜单</li><li><input disabled="" type="checkbox"> 自动化gitalk初始化</li><li><input disabled="" type="checkbox"> 购买域名</li><li><input disabled="" type="checkbox"> 页面增加简历 themes中about layout 修改</li><li><input disabled="" type="checkbox"> 安装mathjax ， prism， kramed 代码高亮，数学公式，冲突解决</li><li><input disabled="" type="checkbox"> 学一下前端语言整一个自己的theme</li><li><input disabled="" type="checkbox"> 关联域名</li><li><input disabled="" type="checkbox"> 多电脑同步</li><li><input disabled="" type="checkbox"> 线路优化</li></ul><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>关于我想写的系列</p><ul><li>日常解bug系列</li><li>硕士工作整理</li><li>本科工作整理</li><li>数学知识补全</li><li>CS技能补全</li><li>机器人系列</li><li>奇奇怪怪的技能<ul><li>如何保持mac屏幕整洁，思高布，键盘膜，壳</li></ul></li><li>读书这件事</li><li>碎碎念</li><li>刷题记录</li></ul><h2 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h2><p>如果我想修改md文件的名字了怎么办？直接改会有什么影响吗？</p><p>公共CDN？ jQuery？</p><blockquote><p>CDN公共库是指将常用的JS库存放在CDN节点，以方便广大开发者直接调用。与将JS库存放在服务器单机上相比，CDN公共库更加稳定、高速。一 般的CDN公共库都会包含全球所有最流行的开源JavaScript库，你可以在自己的网页上直接通过script标记引用这些资源。这样做不仅可以为您 节省流量，还能通过CDN加速，获得更快的访问速度。</p></blockquote><p>如何链接两篇博客</p><h2 id="意愿"><a href="#意愿" class="headerlink" title="意愿"></a>意愿</h2><p>我的计算机网络知识实在是太一贫如洗了！！！</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建指南</category>
      
    </categories>
    
    
    <tags>
      
      <tag>不定期更新</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于github每次push都要输入passphrase这件事</title>
    <link href="/2022/03/04/%E5%85%B3%E4%BA%8Egithub%E6%AF%8F%E6%AC%A1push%E9%83%BD%E8%A6%81%E8%BE%93%E5%85%A5passphrase%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
    <url>/2022/03/04/%E5%85%B3%E4%BA%8Egithub%E6%AF%8F%E6%AC%A1push%E9%83%BD%E8%A6%81%E8%BE%93%E5%85%A5passphrase%E8%BF%99%E4%BB%B6%E4%BA%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>添加 SSH 公钥后，每次 git push 还要输入 passphrase，十分不方便</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>添加 SSH 时有一步询问是否添加 passphrase，没留意添加了</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>重新生成 SSH 公钥，注意当询问</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">Enter pass*phrase* (empty <span class="hljs-keyword">for</span> no pass*phrase*): <br></code></pre></td></tr></table></figure><p>时直接回车</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>我与github的爱恨情仇</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2.博客搭建指南之日常三连</title>
    <link href="/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%97%A5%E5%B8%B8%E4%B8%89%E8%BF%9E/"/>
    <url>/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%97%A5%E5%B8%B8%E4%B8%89%E8%BF%9E/</url>
    
    <content type="html"><![CDATA[<p>本篇文章为 <code>博客搭建指南</code> 系列第二篇，主要记录 hexo 日常使用操作，以防我健忘……</p><p>ps. 好像并不需要单独开一篇，思考一下有没有机会整理</p><h2 id="日常三连"><a href="#日常三连" class="headerlink" title="日常三连"></a>日常三连</h2><ol><li><p>写文章</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;标题&quot;</span><br></code></pre></td></tr></table></figure><p>去  <u>source/_posts</u> 下找到对应文件开写</p></li><li><p>生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure></li><li><p>本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure></li><li><p>发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure></li><li><p>查看</p></li></ol><h2 id="一些常用操作"><a href="#一些常用操作" class="headerlink" title="一些常用操作"></a>一些常用操作</h2><h3 id="引用本地文章链接"><a href="#引用本地文章链接" class="headerlink" title="引用本地文章链接"></a>引用本地文章链接</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% post<span class="hljs-emphasis">_link 文件名(不带.md) 显示的内容 %&#125;</span><br><span class="hljs-emphasis">如 &#123;% post_</span>link 博客搭建指南之日常三连 日常三连(可选项，没有的话显示文章的title属性)%&#125;<br></code></pre></td></tr></table></figure><h3 id="MD工具"><a href="#MD工具" class="headerlink" title="MD工具"></a>MD工具</h3><p>目前在用的是 typora +默认 github 主题，写起来体验一般般，typora的markdown快捷键体验没有notion好，有空研究一下更舒服的改进</p><h2 id="目录下的文件们"><a href="#目录下的文件们" class="headerlink" title="目录下的文件们"></a>目录下的文件们</h2><ul><li>scaffolds<ul><li>post 发布博文的模版</li></ul></li><li>source <ul><li>404.md 404页面模版</li><li>_posts  md文件呆的地方</li></ul></li><li>Themes<ul><li>landscape<ul><li>layout<ul><li>404.ejs 可以作为模版拉去每个主题</li></ul></li></ul></li></ul></li></ul><h2 id="个性化主题"><a href="#个性化主题" class="headerlink" title="个性化主题"></a>个性化主题</h2><ul><li>matery：紫色渐变色，不是很喜欢</li><li>next</li><li>beantech</li><li>butterfly：慢，手机端友好</li><li>fluid：快速，手机端不是很友好</li><li>ayer：快速，手机端友好</li><li>bamboo：花里胡哨支持功能多</li></ul><h2 id="个性化功能"><a href="#个性化功能" class="headerlink" title="个性化功能"></a>个性化功能</h2><ul><li><input disabled="" type="checkbox"> 增加建站时间：/themes/../layout/_partial/footer.ejs 加了 但没看到</li><li><input checked="" disabled="" type="checkbox"> 阅读统计@不蒜子 ：/themes/../layout/_partial/footer.ejs </li><li><input disabled="" type="checkbox"> 文章添加水印，找字库，watermark.py</li><li><input disabled="" type="checkbox"> 为文章添加音乐，网易云外链插在图像中</li><li><input checked="" disabled="" type="checkbox"> 添加评论 github</li></ul><h2 id="ejs-语法"><a href="#ejs-语法" class="headerlink" title="ejs 语法"></a>ejs 语法</h2><h2 id="相关参考"><a href="#相关参考" class="headerlink" title="相关参考"></a>相关参考</h2><ul><li><a href="https://hexo.io/zh-cn/docs/configuration">配置文件修改官方文档</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>博客搭建指南</category>
      
    </categories>
    
    
    <tags>
      
      <tag>不定期更新</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>github连接缓慢的解决</title>
    <link href="/2022/03/04/github%E8%BF%9E%E6%8E%A5%E7%BC%93%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <url>/2022/03/04/github%E8%BF%9E%E6%8E%A5%E7%BC%93%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>常规解决思路，直接改host，操作见下一小节</p><p>非常规解决思路：断开Wifi重连/重启电脑/重启浏览器</p><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><ol><li><p>查看 github 的 DNS：<a href="https://www.ipaddress.com/">https://www.ipaddress.com</a></p><blockquote><p>查询网址👇</p><p>github.com</p><p>github.global.ssl.fastly.net</p><p>codeload.github.com</p></blockquote></li><li><p>打开 hosts 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">sudo vi /etc/hosts<br></code></pre></td></tr></table></figure><blockquote><p>i : 修改</p><p>esc：退出修改</p><p>w+q：退出并保存</p><p>q：退出</p></blockquote></li><li><p>改！类似这样子👇</p><blockquote><p>140.82.113.4  github.com</p><p>199.232.69.194 github.global.ssl.fastly.net</p><p>140.82.113.9  codeload.github.com</p></blockquote></li><li><p>还有一步不是很明白用意</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo killall -HUP mDNSResponder<br></code></pre></td></tr></table></figure></li></ol><h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>国内使用github真的是个玄学问题，有时候挂梯子行，有时候不挂梯子行，有时候挂不挂梯子都不行，令人大头。</p>]]></content>
    
    
    <categories>
      
      <category>Github</category>
      
    </categories>
    
    
    <tags>
      
      <tag>我与github的爱恨情仇</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>冲浪拾遗</title>
    <link href="/2022/03/04/%E5%86%B2%E6%B5%AA%E6%8B%BE%E9%81%97/"/>
    <url>/2022/03/04/%E5%86%B2%E6%B5%AA%E6%8B%BE%E9%81%97/</url>
    
    <content type="html"><![CDATA[<p>这是一个冲浪时发现心动网页的收藏夹</p><ol><li>度度出的<a href="https://kaifa.baidu.com/">开发者搜索</a>，页面看着舒服，内容也很相关</li><li>数学的<a href="https://betterexplained.com/">更好解释</a></li><li></li></ol><h3 id="个人博客系列"><a href="#个人博客系列" class="headerlink" title="个人博客系列"></a>个人博客系列</h3><p><a href="https://www.mihaileric.com/">写斯坦福4年计划的人</a></p><p><a href="http://www.matrix67.com/blog/">matrix67</a></p><p><a href="https://lieuzhenghong.com/">牛津念PPE的软件工程师</a></p><p><a href="https://joyw.home.blog/">一个有趣的姐姐</a></p><h3 id="学习相关"><a href="#学习相关" class="headerlink" title="学习相关"></a>学习相关</h3><ol><li><p><a href="http://catalog.mit.edu/degree-charts/">MIT的专业与课程查询 degree charts</a></p></li><li><p><a href="https://firstyear.mit.edu/academics-exploration/major-exploration/major-and-minor-options/course-roadmaps-and-important-links/">MIT first year roadmap</a></p></li><li><p><a href="https://ocw.mit.edu/">MIT网课平台</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>杂七杂八</category>
      
    </categories>
    
    
    <tags>
      
      <tag>不定期更新</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>1.博客搭建指南之无中生有</title>
    <link href="/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%97%A0%E4%B8%AD%E7%94%9F%E6%9C%89/"/>
    <url>/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%97%A0%E4%B8%AD%E7%94%9F%E6%9C%89/</url>
    
    <content type="html"><![CDATA[<p>博客搭建指南记录了本博客搭建的过程，虽然叫指南但是相比教程偏记录多一些。本系列目前有六篇，这是第一篇，本系列的其余文章可以戳以下链接或 <code>分类&gt;博客搭建指南</code> 查看。</p><p>第一篇：<a href="/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%97%A0%E4%B8%AD%E7%94%9F%E6%9C%89/" title="无中生有">无中生有</a><br>第二篇：<a href="/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%97%A5%E5%B8%B8%E4%B8%89%E8%BF%9E/" title="日常三连">日常三连</a><br>第三篇：<a href="/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Bfluid%E4%B8%BB%E9%A2%98/" title="基于fluid主题的网站配置">基于fluid主题的网站配置</a><br>第四篇：<a href="/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E7%9F%A5%E8%AF%86%E6%94%B6%E9%9B%86/" title="知识收集">知识收集</a><br>第五篇：<a href="/2022/03/06/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Btroubleshooting/" title="Troubleshooting">Troubleshooting</a><br>第六篇：<a href="/2022/03/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8B%E6%9D%A5%E6%97%A5%E6%96%B9%E9%95%BF/" title="来日方长">来日方长</a></p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>软件环境：Github + Hexo </p><p>系统环境：Mac OS</p><p>涉及工具：Vscode，Typora</p><p>本方案的域名是<code>.github.io</code> 后缀，后续可以搞个域名再更新</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>安装支持环境</p><ul><li><p><a href="https://nodejs.org/en/">Node.js</a></p><blockquote><p>在Mac os安装有教程是通过home brew安装，但由于我更新了最新版本，homebrew使用不了会报错。</p><p>报错信息为：<code>We do not provide support for this pre-release version. You will encounter build failures with some formulae.</code></p><p>解决方法：戳链接去官网下载安装，很快很方便</p></blockquote></li><li><p><a href="https://github.com/hexojs/hexo">Hexo</a></p><blockquote><p><code>npm install -g hexo-cli</code></p><p>建立博客存放路径，在该路径下</p><p><code>hexo init</code></p><p><code>npm install</code></p><p>测试是否安装成功</p><p><code>hexo g</code></p><p><code>hexo s</code></p><p>打开浏览器本地端口查看博客</p></blockquote></li><li><p><a href="https://github.com/">Git</a></p></li></ul></li><li><p>建立Github仓库</p><ul><li><p>仓库名字：<strong>username.github.io</strong></p></li><li><p>仓库属性：public</p><blockquote><p>打开主页出现报错：<strong>There isn’t a GitHub Pages site here.</strong></p><p>原因：没选public，选private需要每年付费48美元否则就无法访问QAQ</p></blockquote></li><li><p>生成SSH key</p></li></ul></li><li><p>编辑 <code> ~/_config.yml</code> 文件</p><blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:username/username.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure></blockquote></li><li><p>访问 <code>username.github.io</code> 即可访问</p></li><li><p>到这里一个可以被互联网访问的极简博客就搭建完毕了，通过更换不同的主题以及插件可以增加更多的功能。我选择了 Fluid 主题，具体的配置过程记录在 <a href="/2022/03/07/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%E4%B9%8Bfluid%E4%B8%BB%E9%A2%98/" title="基于fluid主题的网站配置">基于fluid主题的网站配置</a></p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.cnblogs.com/javayanglei/p/12897622.html">极简版</a></li><li><a href="https://blog.csdn.net/yanzi1225627/article/details/54566792">简约全流程</a></li><li><a href="https://godweiyang.com/2018/04/13/hexo-blog/">详尽版</a></li><li><a href="https://www.cnblogs.com/soulblog/p/15782548.html">基于服务器</a></li></ol><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>Hexo 是一个基于 Node.js 的高效静态站点生成框架</p><p>支持使用Markdown来写博客</p><h3 id="Github-io"><a href="#Github-io" class="headerlink" title="Github.io"></a>Github.io</h3><p>基于 github repo 搭建网页，本身提供主题和基础工具</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建指南</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>世界你好</title>
    <link href="/2022/03/04/%E4%B8%96%E7%95%8C%E4%BD%A0%E5%A5%BD/"/>
    <url>/2022/03/04/%E4%B8%96%E7%95%8C%E4%BD%A0%E5%A5%BD/</url>
    
    <content type="html"><![CDATA[<p>四年半前尝试了下在github搭博客，但也三分钟热度地放弃了。</p><p>实际上从六七年前开始就有随缘地在CSDN，知乎等等之类上写那么几篇文字，但也不成体系。</p><p>明白建立一个人形象的重要性，但是我本性中的懒惰，随意，总是在兜兜转转中战胜了短暂的念头。</p><p>这一次我决定，再尝试一次，再坚持一次。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
